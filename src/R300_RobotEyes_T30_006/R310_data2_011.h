

#pragma once

// R300_data_005.h - 로봇 눈 애니메이션 및 폰트 데이터 정의 파일
// 이 파일은 로봇 눈 애니메이션에 사용되는 모든 정적 데이터 테이블을 정의합니다.
// 데이터는 프로그램 메모리(PROGMEM)에 저장되어 RAM 사용량을 절약합니다.

// 기본 타입 및 설정 헤더 파일 포함
// 이 헤더 파일은 T_R300_로 시작하는 구조체 및 열거형과 G_R300_로 시작하는 상수를 정의합니다.
#include "R310_types_config_007.h"


// --- 전역 상수 정의 (G_R300_ 로 시작) ---
// 로봇 상태 관리를 위한 비활성 시간 기준 정의
// 예제: 로봇이 일정 시간(10초) 동안 명령을 받지 않으면 SLEEPING 상태로 전환됩니다.
const unsigned long G_R300_TIME_TO_SLEEP_EXAMPLE = 10000; // 밀리초 단위 (10초)


// --- 열거형 및 구조체 정의 (사용자 정의 타입: T_R300_ 로 시작) ---
// 로봇의 현재 상태
typedef enum {
    AWAKE,   // 깨어있는 상태
    SLEEPING // 잠자는 상태
} T_R300_State;

// 로봇 눈 감정 애니메이션 종류
typedef enum {
    E_NONE,          // 애니메이션 없음
    E_NEUTRAL,       // 일반적인 눈 모양
    E_BLINK,         // 깜빡임
    E_WINK,          // 윙크
    E_LOOK_L,        // 왼쪽 보기
    E_LOOK_R,        // 오른쪽 보기
    E_LOOK_U,        // 위 보기
    E_LOOK_D,        // 아래 보기
    E_ANGRY,         // 화남
    E_SAD,           // 슬픔
    E_EVIL,          // 사악함
    E_EVIL2,         // 사악함 2
    E_SQUINT,        // 찡그림
    E_DEAD,          // 죽은 눈
    E_SCAN_UD,       // 상하 스캔
    E_SCAN_LR,       // 좌우 스캔
    E_SQUINT_BLINK,  // 찡그림 깜빡임
    E_IDLE,          // 대기 상태
    E_HEART,         // 하트
    E_SLEEP,         // 잠자는 눈
} T_R300_emotion_t;

// 애니메이션 시퀀스 단일 프레임
typedef struct {
    uint8_t eyeData[2];  // [0] = 오른쪽 눈 폰트 인덱스, [1] = 왼쪽 눈 폰트 인덱스
    uint16_t timeFrame;  // 프레임 표시 시간 (밀리초)
} T_R300_animFrame_t;

// 감정 애니메이션 시퀀스 조회 테이블 항목
typedef struct {
    T_R300_emotion_t e;          // 감정 종류
    const T_R300_animFrame_t* seq; // 시퀀스 데이터 PROGMEM 주소
    uint8_t size;         // 시퀀스 총 프레임 개수
} T_R300_animTable_t;

// 애니메이션 상태 머신(FSM) 상태
typedef enum {
    S_IDLE,      // 유휴 상태
    S_RESTART,   // 재시작 준비 상태
    S_ANIMATE,   // 애니메이션 실행 상태
    S_PAUSE,     // 프레임 대기 상태
    S_TEXT,      // 텍스트 표시 상태
} T_R300_animState_t;

// 눈 모양 비트맵 데이터
typedef struct {
    uint8_t width; // 문자 너비 (픽셀)
    uint8_t data[8]; // 문자 비트맵 데이터 (8x8)
} T_R300_SimpleFontChar;


// --- 정적 데이터 테이블 정의 (PROGM0EM에 저장, g_R300_ 로 시작) ---
// 각 배열은 특정 감정 애니메이션의 프레임 시퀀스를 나타냅니다.
// 각 요소는 T_R300_animFrame_t 구조체이며,
// { {오른쪽 눈 폰트 인덱스, 왼쪽 눈 폰트 인덱스}, 해당 프레임 표시 시간(ms) } 형식입니다.

// 깜빡임 애니메이션 시퀀스 데이터
const T_R300_animFrame_t g_R300_seqBlink[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME / 2}, // 프레임 0: 기본 눈 모양
    {{1, 1}, G_R300_FRAME_TIME / 2}, // 프레임 1: 살짝 감김
    {{2, 2}, G_R300_FRAME_TIME / 2}, // 프레임 2: 더 감김
    {{3, 3}, G_R300_FRAME_TIME / 2}, // 프레임 3: 거의 감김
    {{4, 4}, G_R300_FRAME_TIME / 2}, // 프레임 4: 거의 완전히 감김
    {{5, 5}, G_R300_FRAME_TIME},     // 프레임 5: 완전히 감김 (최대 시간 유지)
};

// 윙크 애니메이션 시퀀스 데이터 (원본 데이터 기준 오른쪽 눈 윙크)
const T_R300_animFrame_t g_R300_seqWink[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME / 2}, // 프레임 0: 기본 눈 모양
    {{1, 0}, G_R300_FRAME_TIME / 2}, // 프레임 1: 오른쪽 눈 살짝 감김
    {{2, 0}, G_R300_FRAME_TIME / 2}, // 프레임 2: 오른쪽 눈 더 감김
    {{3, 0}, G_R300_FRAME_TIME / 2}, // 프레임 3: 오른쪽 눈 거의 감김
    {{4, 0}, G_R300_FRAME_TIME / 2}, // 프레임 4: 오른쪽 눈 거의 완전히 감김
    {{5, 0}, G_R300_FRAME_TIME * 2}, // 프레임 5: 오른쪽 눈 완전히 감김 (최대 시간 유지)
};

// 오른쪽 보기 애니메이션 시퀀스 데이터
const T_R300_animFrame_t g_R300_seqRight[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{6, 6}, G_R300_FRAME_TIME},     // 프레임 1: 눈동자 오른쪽 이동 시작
    {{7, 7}, G_R300_FRAME_TIME * 5}, // 프레임 2: 눈동자 오른쪽 끝 (최대 시간 유지)
};

// 왼쪽 보기 애니메이션 시퀀스 데이터
const T_R300_animFrame_t g_R300_seqLeft[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{8, 8}, G_R300_FRAME_TIME},     // 프레임 1: 눈동자 왼쪽 이동 시작
    {{9, 9}, G_R300_FRAME_TIME * 5}, // 프레임 2: 눈동자 왼쪽 끝 (최대 시간 유지)
};

// 위 보기 애니메이션 시퀀스 데이터
const T_R300_animFrame_t g_R300_seqUp[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{11, 11}, G_R300_FRAME_TIME},   // 프레임 1: 눈동자 위 이동 시작
    {{12, 12}, G_R300_FRAME_TIME},   // 프레임 2: 눈동자 더 위로
    {{13, 13}, G_R300_FRAME_TIME * 5},// 프레임 3: 눈동자 위 끝 (최대 시간 유지)
};

// 아래 보기 애니메이션 시퀀스 데이터
const T_R300_animFrame_t g_R300_seqDown[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{14, 14}, G_R300_FRAME_TIME},   // 프레임 1: 눈동자 아래 이동 시작
    {{15, 15}, G_R300_FRAME_TIME},   // 프레임 2: 눈동자 더 아래로
    {{16, 16}, G_R300_FRAME_TIME * 5},// 프레임 3: 눈동자 아래 끝 (최대 시간 유지)
};

// 화남 애니메이션 시퀀스 데이터 (좌우 눈 모양 인덱스 다름)
const T_R300_animFrame_t g_R300_seqAngry[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{22, 17}, G_R300_FRAME_TIME},   // 프레임 1: 눈썹 찡그림 시작 (오른쪽 눈 22, 왼쪽 눈 17)
    {{23, 18}, G_R300_FRAME_TIME},   // 프레임 2: 눈썹 더 찡그림 (오른쪽 눈 23, 왼쪽 눈 18)
    {{24, 19}, G_R300_FRAME_TIME},   // 프레임 3: 눈썹 많이 찡그림 (오른쪽 눈 24, 왼쪽 눈 19)
    {{25, 20}, 2000},                // 프레임 4: 가장 화난 눈 모양 (오른쪽 눈 25, 왼쪽 눈 20, 2초 유지)
};

// 슬픔 애니메이션 시퀀스 데이터 (좌우 눈 모양 인덱스 다름)
const T_R300_animFrame_t g_R300_seqSad[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{32, 27}, G_R300_FRAME_TIME},   // 프레임 1: 눈꼬리 처짐 시작 (오른쪽 눈 32, 왼쪽 눈 27)
    {{33, 28}, G_R300_FRAME_TIME},   // 프레임 2: 눈꼬리 더 처짐 (오른쪽 눈 33, 왼쪽 눈 28)
    {{34, 29}, 2000},                // 프레임 3: 가장 슬픈 눈 모양 (오른쪽 눈 34, 왼쪽 눈 29, 2초 유지)
};

// 사악함 애니메이션 시퀀스 데이터 (좌우 눈 모양 인덱스 다름)
const T_R300_animFrame_t g_R300_seqEvil[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{39, 37}, G_R300_FRAME_TIME},   // 프레임 1: 눈썹 치켜올림 시작 (오른쪽 눈 39, 왼쪽 눈 37)
    {{40, 38}, 2000},                // 프레임 2: 가장 사악한 눈 모양 (오른쪽 눈 40, 왼쪽 눈 38, 2초 유지)
};

// 사악함 2 애니메이션 시퀀스 데이터 (좌우 눈 모양 인덱스 다름)
const T_R300_animFrame_t g_R300_seqEvil2[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{54, 17}, G_R300_FRAME_TIME},   // 프레임 1: 좌우 비대칭 눈 모양 시작 (오른쪽 54, 왼쪽 17)
    {{55, 18}, G_R300_FRAME_TIME},   // 프레임 2: 좌우 비대칭 진행 (오른쪽 55, 왼쪽 18)
    {{56, 19}, G_R300_FRAME_TIME},   // 프레임 3: 좌우 비대칭 진행 (오른쪽 56, 왼쪽 19)
    {{57, 20}, 2000},                // 프레임 4: 좌우 비대칭 최종 상태 (오른쪽 57, 왼쪽 20, 2초 유지)
};

// 찡그림 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R300_animFrame_t g_R300_seqSquint[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{54, 54}, G_R300_FRAME_TIME},   // 프레임 1: 눈 살짝 찡그림 시작
    {{55, 55}, G_R300_FRAME_TIME},   // 프레임 2: 눈 더 찡그림
    {{56, 56}, G_R300_FRAME_TIME},   // 프레임 3: 눈 많이 찡그림
    {{57, 57}, 2000},                // 프레임 4: 최대로 찡그린 모양 (2초 유지)
};

// 죽은 눈 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R300_animFrame_t g_R300_seqDead[] PROGMEM = {
    {{52, 52}, G_R300_FRAME_TIME * 4},// 프레임 0: X자 눈 모양 1 (400ms 유지)
    {{53, 53}, G_R300_FRAME_TIME * 4},// 프레임 1: X자 눈 모양 2 (400ms 유지)
    {{52, 52}, G_R300_FRAME_TIME * 2},// 프레임 2: X자 눈 모양 1 (200ms 유지) - 짧게 반복되는 효과
};

// 좌우 스캔 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R300_animFrame_t g_R300_seqScanLeftRight[] PROGMEM = {
    {{41, 41}, G_R300_FRAME_TIME * 2},// 프레임 0: 눈동자 왼쪽 끝 (200ms 유지)
    {{42, 42}, G_R300_FRAME_TIME},   // 프레임 1: 눈동자 이동
    {{43, 43}, G_R300_FRAME_TIME},   // 프레임 2: 눈동자 이동
    {{44, 44}, G_R300_FRAME_TIME},   // 프레임 3: 눈동자 오른쪽 끝
};

// 상하 스캔 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R300_animFrame_t g_R300_seqScanUpDown[] PROGMEM = {
    {{46, 46}, G_R300_FRAME_TIME * 2},// 프레임 0: 눈동자 위쪽 중간 (200ms 유지)
    {{47, 47}, G_R300_FRAME_TIME},   // 프레임 1: 눈동자 이동
    {{48, 48}, G_R300_FRAME_TIME},   // 프레임 2: 눈동자 이동
    {{49, 49}, G_R300_FRAME_TIME},   // 프레임 3: 눈동자 이동
    {{50, 50}, G_R300_FRAME_TIME},   // 프레임 4: 눈동자 이동
    {{51, 51}, G_R300_FRAME_TIME},   // 프레임 5: 눈동자 아래 끝
};

// 찡그림 깜빡임 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R300_animFrame_t g_R300_seqSquintBlink[] PROGMEM = {
    {{57, 57}, G_R300_FRAME_TIME},   // 프레임 0: 최대로 찡그린 모양
    {{5, 5}, G_R300_FRAME_TIME},     // 프레임 1: 완전히 감긴 모양
};

// 대기 상태 눈 모양 시퀀스 데이터 (정적 표시)
const T_R300_animFrame_t g_R300_seqIdle[] PROGMEM = {
    {{57, 57}, G_R300_FRAME_TIME},   // 프레임 0: 최대로 찡그린 모양 유지
};

// 하트 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R300_animFrame_t g_R300_seqHeart[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{59, 59}, G_R300_FRAME_TIME},   // 프레임 1: 하트 모양 나타남
    {{60, 60}, 2000},                // 프레임 2: 완성된 하트 모양 (2초 유지)
};

// 잠자는 눈 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R300_animFrame_t g_R300_seqSleep[] PROGMEM = {
    {{0, 0}, G_R300_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{62, 62}, G_R300_FRAME_TIME},   // 프레임 1: 감기기 시작
    {{63, 63}, G_R300_FRAME_TIME},   // 프레임 2: 더 감김
    {{64, 64}, G_R300_FRAME_TIME},   // 프레임 3: 더 감김
    {{65, 65}, G_R300_FRAME_TIME},   // 프레임 4: 더 감김
    {{66, 66}, G_R300_FRAME_TIME},   // 프레임 5: 더 감김
    {{67, 67}, G_R300_FRAME_TIME},   // 프레임 6: 완전히 감긴 모양 또는 패턴 등
};

// --- 애니메이션 시퀀스 검색을 위한 조회 테이블 정의 ---
// T_R300_emotion_t 열거형 값과 실제 애니메이션 시퀀스 데이터를 연결합니다.
// 새로운 애니메이션 시퀀스를 추가하려면 이 테이블에도 항목을 추가해야 합니다.
const T_R300_animTable_t g_R300_lookupTable[] PROGMEM = {
    {E_NEUTRAL, g_R300_seqBlink, 1},  // 중립: Blink 시퀀스의 첫 프레임만 사용 (정적)
    {E_BLINK, g_R300_seqBlink, G_R300_ARRAY_SIZE(g_R300_seqBlink)},         // 깜빡임
    {E_WINK, g_R300_seqWink, G_R300_ARRAY_SIZE(g_R300_seqWink)},             // 윙크
    {E_LOOK_L, g_R300_seqLeft, G_R300_ARRAY_SIZE(g_R300_seqLeft)},           // 왼쪽 보기
    {E_LOOK_R, g_R300_seqRight, G_R300_ARRAY_SIZE(g_R300_seqRight)},         // 오른쪽 보기
    {E_LOOK_U, g_R300_seqUp, G_R300_ARRAY_SIZE(g_R300_seqUp)},               // 위 보기
    {E_LOOK_D, g_R300_seqDown, G_R300_ARRAY_SIZE(g_R300_seqDown)},           // 아래 보기
    {E_ANGRY, g_R300_seqAngry, G_R300_ARRAY_SIZE(g_R300_seqAngry)},         // 화남
    {E_SAD, g_R300_seqSad, G_R300_ARRAY_SIZE(g_R300_seqSad)},               // 슬픔
    {E_EVIL, g_R300_seqEvil, G_R300_ARRAY_SIZE(g_R300_seqEvil)},             // 사악함
    {E_EVIL2, g_R300_seqEvil2, G_R300_ARRAY_SIZE(g_R300_seqEvil2)},         // 사악함 2
    {E_DEAD, g_R300_seqDead, G_R300_ARRAY_SIZE(g_R300_seqDead)},             // 죽은 눈
    {E_SCAN_LR, g_R300_seqScanLeftRight, G_R300_ARRAY_SIZE(g_R300_seqScanLeftRight)},// 좌우 스캔
    {E_SCAN_UD, g_R300_seqScanUpDown, G_R300_ARRAY_SIZE(g_R300_seqScanUpDown)},    // 상하 스캔
    // Idle animations
    {E_IDLE, g_R300_seqIdle, G_R300_ARRAY_SIZE(g_R300_seqIdle)},             // 대기 상태
    {E_SQUINT, g_R300_seqSquint, G_R300_ARRAY_SIZE(g_R300_seqSquint)},       // 찡그림
    {E_SQUINT_BLINK, g_R300_seqSquintBlink, G_R300_ARRAY_SIZE(g_R300_seqSquintBlink)},// 찡그림 깜빡임
    // Emojis
    {E_HEART, g_R300_seqHeart, G_R300_ARRAY_SIZE(g_R300_seqHeart)},         // 하트
    // Sleep
    {E_SLEEP, g_R300_seqSleep, G_R300_ARRAY_SIZE(g_R300_seqSleep)},         // 잠자는 눈
};

///////////////////////////////////
///////////////////////////////////


// --- 눈 모양 비트맵 데이터 정의 (폰트 역할, PROGMEM에 저장) ---
// 각 항목은 8x8 픽셀의 눈 모양 비트맵을 나타냅니다.
// T_R300_SimpleFontChar 구조체 형식: { 너비(항상 8), {8바이트의 비트맵 데이터} }
// !!주의!!: 데이터는 행 우선(Row Major) 형식으로 저장됩니다.
// data[0]는 맨 위 행(Row 7)의 8개 픽셀, data[7]는 맨 아래 행(Row 0)의 8개 픽셀을 나타냅니다.
// 각 바이트 내 비트는 왼쪽(MSB)부터 오른쪽(LSB) 순서로 열(Col 0 ~ Col 7)을 나타냅니다.


// 폰트 문자 하나를 나타내는 구조체 정의
// 8x8 픽셀 이미지를 저장하는 데 사용됩니다.


typedef enum {
    AWAKE,   // 깨어있는 상태
    SLEEPING // 잠자는 상태
} T_R310_State;

// 로봇 눈 감정 애니메이션 종류
typedef enum {
    E_R310_NONE,          // 애니메이션 없음
    E_R310_NEUTRAL,       // 일반적인 눈 모양
    E_R310_BLINK,         // 깜빡임
    E_R31p_WINK,          // 윙크
    E_LOOK_L,        // 왼쪽 보기
    E_LOOK_R,        // 오른쪽 보기
    E_LOOK_U,        // 위 보기
    E_LOOK_D,        // 아래 보기
    E_ANGRY,         // 화남
    E_SAD,           // 슬픔
    E_EVIL,          // 사악함
    E_EVIL2,         // 사악함 2
    E_SQUINT,        // 찡그림
    E_DEAD,          // 죽은 눈
    E_SCAN_UD,       // 상하 스캔
    E_SCAN_LR,       // 좌우 스캔
    E_SQUINT_BLINK,  // 찡그림 깜빡임
    E_IDLE,          // 대기 상태
    E_HEART,         // 하트
    E_SLEEP,         // 잠자는 눈
} T_R310_emotion_t;

// 애니메이션 시퀀스 단일 프레임
typedef struct {
    uint8_t eyeData[2];  // [0] = 오른쪽 눈 폰트 인덱스, [1] = 왼쪽 눈 폰트 인덱스
    uint16_t timeFrame;  // 프레임 표시 시간 (밀리초)
} T_R310_animFrame_t;

// 감정 애니메이션 시퀀스 조회 테이블 항목
typedef struct {
    T_R310_emotion_t e;          // 감정 종류
    const T_R310_animFrame_t* seq; // 시퀀스 데이터 PROGMEM 주소
    uint8_t size;         // 시퀀스 총 프레임 개수
} T_R310_animTable_t;

// 애니메이션 상태 머신(FSM) 상태
typedef enum {
    S_IDLE,      // 유휴 상태
    S_RESTART,   // 재시작 준비 상태
    S_ANIMATE,   // 애니메이션 실행 상태
    S_PAUSE,     // 프레임 대기 상태
    S_TEXT,      // 텍스트 표시 상태
} T_R310_animState_t;



// --- 정적 데이터 테이블 정의 (PROGM0EM에 저장, g_R300_ 로 시작) ---
// 각 배열은 특정 감정 애니메이션의 프레임 시퀀스를 나타냅니다.
// 각 요소는 T_R300_animFrame_t 구조체이며,
// { {오른쪽 눈 폰트 인덱스, 왼쪽 눈 폰트 인덱스}, 해당 프레임 표시 시간(ms) } 형식입니다.

// 깜빡임 애니메이션 시퀀스 데이터
const T_R310_animFrame_t g_R310_seqBlink[] PROGMEM = {
    {{0, 0}, G_R310_FRAME_TIME / 2}, // 프레임 0: 기본 눈 모양
    {{1, 1}, G_R310_FRAME_TIME / 2}, // 프레임 1: 살짝 감김
    {{2, 2}, G_R310_FRAME_TIME / 2}, // 프레임 2: 더 감김
    {{3, 3}, G_R310_FRAME_TIME / 2}, // 프레임 3: 거의 감김
    {{4, 4}, G_R310_FRAME_TIME / 2}, // 프레임 4: 거의 완전히 감김
    {{5, 5}, G_R310_FRAME_TIME},     // 프레임 5: 완전히 감김 (최대 시간 유지)
};

// 윙크 애니메이션 시퀀스 데이터 (원본 데이터 기준 오른쪽 눈 윙크)
const T_R310_animFrame_t g_R310_seqWink[] PROGMEM = {
    {{0, 0}, G_R310_FRAME_TIME / 2}, // 프레임 0: 기본 눈 모양
    {{1, 0}, G_R310_FRAME_TIME / 2}, // 프레임 1: 오른쪽 눈 살짝 감김
    {{2, 0}, G_R310_FRAME_TIME / 2}, // 프레임 2: 오른쪽 눈 더 감김
    {{3, 0}, G_R310_FRAME_TIME / 2}, // 프레임 3: 오른쪽 눈 거의 감김
    {{4, 0}, G_R310_FRAME_TIME / 2}, // 프레임 4: 오른쪽 눈 거의 완전히 감김
    {{5, 0}, G_R310_FRAME_TIME * 2}, // 프레임 5: 오른쪽 눈 완전히 감김 (최대 시간 유지)
};

const T_R310_animTable_t g_R310_lookupTable[] PROGMEM = {
    {E_R310_NEUTRAL, g_R310_seqBlink, 1},  // 중립: Blink 시퀀스의 첫 프레임만 사용 (정적)
    {E_R310_BLINK, g_R310_seqBlink, G_R310_ARRAY_SIZE(g_R310_seqBlink)},         // 깜빡임
    {E_R310_WINK, g_R310_seqWink, G_R310_ARRAY_SIZE(g_R310_seqWink)},
}

typedef struct {
    uint8_t width; // 문자의 너비 (여기서는 모든 이미지가 8픽셀이므로 8)
    uint8_t data[8]; // 문자의 픽셀 데이터 (각 바이트가 한 줄을 나타냅니다)
} T_R310_SimpleFontChar;


// 로봇 눈 모양 폰트 데이터 배열
// PROGMEM 키워드는 데이터를 AVR 마이크로컨트롤러의 플래시 메모리에 저장하여
// SRAM 사용량을 절약하는 데 사용됩니다. (선택 사항, 필요 시 제거 가능)
const T_R310_SimpleFontChar g_R310_RobotEyes_Font[] PROGMEM = {
    //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 0 - 행복한 눈 / 웃는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b00111100  //  . . # # # # . .
    }}, // 1 - 아래로 내려간 눈 (아래를 보는 듯한)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 2 - 아래로 내려간 눈 (중앙 아래)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 3 - 위로 올라간 눈 (중앙 위)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000, //  . . . . . . . .
        0b00000000  //  . . . . . . . .
    }}, // 4 - 위로 올라간 눈 (위로 보는 듯한)
    {8, {
        0b00000000, //  . . . . . . . .
        0b01111000, //  . # # # # . . .
        0b11111100, //  # # # # # # . .
        0b10011100, //  # . . # # # . .
        0b10011100, //  # . . # # # . .
        0b11111100, //  # # # # # # . .
        0b01111000, //  . # # # # . . .
        0b00000000  //  . . . . . . . .
    }}, // 5 - 왼쪽을 보는 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 6 - 오른쪽을 보는 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 7 - 왼쪽을 보는 눈 (작은 눈동자, 18번과 유사)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00011110, //  . . . # # # # .
        0b00111111, //  . . # # # # # #
        0b00111001, //  . . # # # . . #
        0b00111001, //  . . # # # . . #
        0b00111111, //  . . # # # # # #
        0b00011110, //  . . . # # # # .
        0b00000000  //  . . . . . . . .
    }}, // 8 - 왼쪽 눈꺼풀이 감긴 눈
    {8, {
        0b00011110, //  . . . # # # # .
        0b00111001, //  . . # # # . . #
        0b00111001, //  . . # # # . . #
        0b00111111, //  . . # # # # # #
        0b00111111, //  . . # # # # # #
        0b00011110, //  . . . # # # # .
        0b00000000, //  . . . . . . . .
        0b00000000  //  . . . . . . . .
    }}, // 9 - 왼쪽 눈꺼풀이 더 감긴 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 10 - 오른쪽 눈꺼풀이 감긴 눈
    {8, {
        0b01111000, //  . # # # # . . .
        0b10011100, //  # . . # # # . .
        0b10011100, //  # . . # # # . .
        0b11111100, //  # # # # # # . .
        0b11111100, //  # # # # # # . .
        0b01111000, //  . # # # # . . .
        0b00000000, //  . . . . . . . .
        0b00000000  //  . . . . . . . .
    }}, // 11 - 오른쪽 눈꺼풀이 더 감긴 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 12 - 오른쪽을 보는 눈 (21번과 유사)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01111000, //  . # # # # . . .
        0b11111100, //  # # # # # # . .
        0b11111100, //  # # # # # # . .
        0b10011100, //  # . . # # # . .
        0b10011100, //  # . . # # # . .
        0b01111000  //  . # # # # . . .
    }}, // 13 - 왼쪽 아래를 보는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 14 - 오른쪽 아래를 보는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 15 - 왼쪽 아래를 보는 눈 (26번과 유사)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00011110, //  . . . # # # # .
        0b00111111, //  . . # # # # # #
        0b00111111, //  . . # # # # # #
        0b00111001, //  . . # # # . . #
        0b00111001, //  . . # # # . . #
        0b00011110  //  . . . # # # # .
    }}, // 16 - 오른쪽 눈꺼풀이 더 감긴 눈 (22번과 유사)


    //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    /*
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 0 - 정상 눈
    */

    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 17 - 아래 부분만 보이는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 18 - 더 아래 부분만 보이는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 19 - 가장 아래 부분만 보이는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 20 - 눈동자만 보이는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 21 - 매우 작은 눈동자





    //#################################
    {8, {
        0b00100100, //  . . # . . # . .
        0b01011010, //  . # . # # . # .
        0b10011001, //  # . . # # . . #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b01000010, //  . # . . . . # .
        0b00100100, //  . . # . . # . .
        0b00011000  //  . . . # # . . .
    }}, // 36 - 혼란스러운 눈 (왼쪽 아래 치우침)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00100100, //  . . # . . # . .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b00100100, //  . . # . . # . .
        0b00011000, //  . . . # # . . .
        0b00000000  //  . . . . . . . .
    }}, // 37 - 혼란스러운 눈 (조금 더 작음)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00100100, //  . . # . . # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00011000, //  . . . # # . . .
        0b00000000  //  . . . . . . . .
    }}, // 38 - 혼란스러운 눈 (더 커짐)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00100100, //  . . # . . # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00011000, //  . . . # # . . .
        0b00000000  //  . . . . . . . .
    }}, // 39 - 혼란스러운 눈 (상단이 잘림)
    {8, {
        0b11111111, //  # # # # # # # #
        0b11011011, //  # # . # # . # #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b11000011, //  # # . . . . # #
        0b11100111, //  # # # . . # # #
        0b11111111  //  # # # # # # # #
    }}, // 40 - 매우 큰 동공의 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01100110, //  . # # . . # # .
        0b01000010, //  . # . . . . # .
        0b01011010, //  . # . # # . # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 41 - 오른쪽 아래로 보는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01000010, //  . # . . . . # .
        0b01011010, //  . # . # # . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 42 - 왼쪽 아래로 보는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 43 - 오른쪽 위로 보는 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b01100110, //  . # # . . # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 44 - 왼쪽 위로 보는 눈



    //#################################
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111000, //  . . # # # . . .
        0b01001100, //  . # . . # # . .
        0b01001110, //  . # . . # # # .
        0b01111110, //  . # # # # # # .
        0b00111110, //  . . # # # # # .
        0b00011100, //  . . . # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 45 - 오른쪽으로 치우친 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111000, //  . . # # # . . .
        0b01111100, //  . # # # # # . .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b00111110, //  . . # # # # # .
        0b00011100, //  . . . # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 46 - 왼쪽으로 치우친 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111000, //  . . # # # . . .
        0b01111100, //  . # # # # # . .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b00111110, //  . . # # # # # .
        0b00011100, //  . . . # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 47 - 오른쪽으로 더 치우친 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111000, //  . . # # # . . .
        0b01111100, //  . # # # # # . .
        0b01111110, //  . # # # # # # .
        0b01110010, //  . # # # . . # .
        0b00110010, //  . . # # . . # .
        0b00011100, //  . . . # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 48 - 위로 보는 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00011100, //  . . . # # # . .
        0b00110010, //  . . # # . . # .
        0b01110010, //  . # # # . . # .
        0b01111110, //  . # # # # # # .
        0b01111100, //  . # # # # # . .
        0b00111000, //  . . # # # . . .
        0b00000000  //  . . . . . . . .
    }}, // 49 - 아래로 보는 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00011100, //  . . . # # # . .
        0b00111110, //  . . # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111100, //  . # # # # # . .
        0b00111000, //  . . # # # . . .
        0b00000000  //  . . . . . . . .
    }}, // 50 - 왼쪽 아래로 보는 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00011100, //  . . . # # # . .
        0b00111110, //  . . # # # # # .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b01111100, //  . # # # # # . .
        0b00111000, //  . . # # # . . .
        0b00000000  //  . . . . . . . .
    }}, // 51 - 오른쪽 아래로 보는 눈 (작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00011100, //  . . . # # # . .
        0b00111110, //  . . # # # # # .
        0b01111110, //  . # # # # # # .
        0b01001110, //  . # . . # # # .
        0b01001100, //  . # . . # # . .
        0b00111000, //  . . # # # . . .
        0b00000000  //  . . . . . . . .
    }}, // 52 - 왼쪽 위로 보는 눈 (작은 눈동자)




    //################################
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 4 - 중간 감은 눈
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 5 - 한쪽으로 치우친 눈 (좌)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 6 - 한쪽으로 치우친 눈 (좌 아래)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 7 - 한쪽으로 치우친 눈 (우 아래)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 8 - 한쪽으로 치우친 눈 (우)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 9 - 한쪽으로 치우친 눈 (우 위)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 10 - 한쪽으로 치우친 눈 (좌 위)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 11 - 윙크 (좌)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 12 - 윙크 (우)


    //#################################
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }}, // 0 - 기본 눈 모양 1
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }}, // 1 - 기본 눈 모양 2 (0번과 동일)

    //################################
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01100110, //  . # # . . # # .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b01100110, //  . # # . . # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }}, // 2 - 감은 눈
    {8, {
        0b01111110, //  . # # # # # # .
        0b11000011, //  # # . . . . # #
        0b10000001, //  # . . . . . . #
        0b10011001, //  # . . # # . . #
        0b10011001, //  # . . # # . . #
        0b10000001, //  # . . . . . . #
        0b11000011, //  # # . . . . # #
        0b01111110  //  . # # # # # # .
    }}, // 3 - 놀란 눈 / 큰 눈
};

// 폰트 데이터 배열의 길이 (T_R300_SimpleFontChar 개수)
const int G_R310_ROBOT_EYES_FONT_LEN = sizeof(g_R310_RobotEyes_Font) / sizeof(T_R300_SimpleFontChar);
