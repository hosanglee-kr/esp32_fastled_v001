#pragma once

// R310_data_005.h - 로봇 눈 애니메이션 및 폰트 데이터 정의 파일
// 이 파일은 로봇 눈 애니메이션에 사용되는 모든 정적 데이터 테이블을 정의합니다.
// 데이터는 프로그램 메모리(PROGMEM)에 저장되어 RAM 사용량을 절약합니다.

// 기본 타입 및 설정 헤더 파일 포함
// 이 헤더 파일은 T_R310_로 시작하는 구조체 및 열거형과 G_R310_로 시작하는 상수를 정의합니다.
#include "R310_config_008.h" // G_R310_FRAME_TIME 및 G_R310_ARRAY_SIZE 정의를 포함해야 합니다.


// --- 전역 상수 정의 (G_R310_ 로 시작) ---
// 로봇 상태 관리를 위한 비활성 시간 기준 정의
// 예제: 로봇이 일정 시간(10초) 동안 명령을 받지 않으면 SLEEPING 상태로 전환됩니다.
const unsigned long G_R310_TIME_TO_SLEEP_EXAMPLE = 10000; // 밀리초 단위 (10초)


///////////////////////////////////
///////////////////////////////////


// --- 폰트 문자 하나를 나타내는 구조체 정의 ---
// 8x8 픽셀 이미지를 저장하는 데 사용됩니다.
typedef struct {
    uint8_t width; // 문자의 너비 (여기서는 모든 이미지가 8픽셀이므로 8)
    uint8_t data[8]; // 문자의 픽셀 데이터 (각 바이트가 한 행을 나타냅니다)
} T_R310_SimpleFontChar;


// Eye의 왼쪽,오른쪽 관리를 위한 열거형
typedef enum {
    EYE_RIGHT = 0,
    EYE_LEFT  = 1
} T_R310_EyeSide_Idx_t;

// --- 로봇 눈 모양 폰트 인덱스를 위한 열거형 정의 ---
// 각 폰트 인덱스는 특정 눈 모양에 대한 의미 있는 이름을 가집니다.
typedef enum {
    // 기본 눈 모양 (인덱스 0-4)
    EYE_NEUTRAL = 0,            // 중립/행복한 눈
    EYE_LOOK_DOWN_2,          // 아래쪽 먼 곳을 보는 눈
    EYE_LOOK_DOWN_1,       // 아래쪽 중앙을 보는 눈
    EYE_LOOK_UP_1,         // 위쪽 중앙을 보는 눈
    EYE_LOOK_UP_2,            // 위쪽 먼 곳을 보는 눈

    // 좌우 시선 이동 눈 모양 (인덱스 5-8)
    EYE_LOOK_LEFT_2,  // 왼쪽을 보는 눈 (작은 눈동자)
    EYE_LOOK_LEFT_1, // 오른쪽을 보는 눈 (작은 눈동자)
    EYE_LOOK_RIGHT_1,   // 왼쪽을 보는 눈 (비대칭)
    EYE_LOOK_RIGHT_2,  // 오른쪽을 보는 눈 (비대칭)

    // 감기거나 찡그린 눈 모양 (인덱스 9-15)
    EYE_CLOSE_1,        // 눈꺼풀이 절반 감긴 눈
    EYE_CLOSE_2,        // 눈꺼풀이 더 감긴 눈
    EYE_CLOSE_3,      // 눈꺼풀이 거의 감긴 눈
    EYE_CLOSE_4,         // 눈동자만 보이는 눈
    EYE_CLOSE_5,          // 매우 작은 눈동자만 보이는 눈

    EYE_ALL_OFF,

    EYE_X_SHAPE_1,              // X자 눈 모양 1
    EYE_X_SHAPE_2,              // X자 눈 모양 2

    // 화난 눈 모양 (인덱스 16-19) - 주석에 따라 실제 인덱스 조정
    EYE_ANGRY_RIGHT_1,          // 화난 오른쪽 눈 1 (눈썹 찡그림 시작)
    EYE_ANGRY_LEFT_1,           // 화난 왼쪽 눈 1 (눈썹 찡그림 시작)
    EYE_ANGRY_RIGHT_2,          // 화난 오른쪽 눈 2 (눈썹 더 찡그림)
    EYE_ANGRY_LEFT_2,           // 화난 왼쪽 눈 2 (눈썹 더 찡그림)
    EYE_ANGRY_RIGHT_3,          // 화난 오른쪽 눈 3 (가장 화난 눈)
    EYE_ANGRY_LEFT_3,           // 화난 왼쪽 눈 3 (가장 화난 눈)

    // 슬픈 눈 모양 (인덱스 22-27)
    EYE_SAD_RIGHT_1,            // 슬픈 오른쪽 눈 1 (눈꼬리 처짐 시작)
    EYE_SAD_LEFT_1,             // 슬픈 왼쪽 눈 1 (눈꼬리 처짐 시작)
    EYE_SAD_RIGHT_2,            // 슬픈 오른쪽 눈 2 (눈꼬리 더 처짐)
    EYE_SAD_LEFT_2,             // 슬픈 왼쪽 눈 2 (눈꼬리 더 처짐)
    EYE_SAD_RIGHT_3,            // 슬픈 오른쪽 눈 3 (가장 슬픈 눈)
    EYE_SAD_LEFT_3,             // 슬픈 왼쪽 눈 3 (가장 슬픈 눈)

    // 사악한 눈 모양 (인덱스 28-31)
    EYE_EVIL_RIGHT_1,           // 사악한 오른쪽 눈 1 (눈썹 치켜올림 시작)
    EYE_EVIL_LEFT_1,            // 사악한 왼쪽 눈 1 (눈썹 치켜올림 시작)
    EYE_EVIL_RIGHT_2,           // 사악한 오른쪽 눈 2 (가장 사악한 눈)
    EYE_EVIL_LEFT_2,            // 사악한 왼쪽 눈 2 (가장 사악한 눈)

    // 스캔 및 복합 눈 모양 (인덱스 32-37)
    EYE_SCAN_LR_1,              // 좌우 스캔 눈동자 1 (왼쪽 끝)
    EYE_SCAN_LR_2,              // 좌우 스캔 눈동자 2 (중간)
    EYE_SCAN_LR_3,              // 좌우 스캔 눈동자 3 (오른쪽 끝)
    EYE_SCAN_UD_1,              // 상하 스캔 눈동자 1 (위쪽 중간)
    EYE_SCAN_UD_2,              // 상하 스캔 눈동자 2 (중간)
    EYE_SCAN_UD_3,              // 상하 스캔 눈동자 3 (아래쪽 끝)

    // 기타 눈 모양 (인덱스 38-42)
    EYE_SQUINTED,               // 찡그린 눈 (최대로 찡그린)
    EYE_HEART_STAGE1,           // 하트 눈 모양 1
    EYE_HEART_STAGE2,           // 하트 눈 모양 2
    EYE_SLEEP_STAGE1,           // 잠자는 눈 모양 1
    EYE_SLEEP_STAGE2,           // 잠자는 눈 모양 2
    EYE_SLEEP_STAGE3,           // 잠자는 눈 모양 3
    EYE_SLEEP_STAGE4,           // 잠자는 눈 모양 4
    EYE_SLEEP_STAGE5,           // 잠자는 눈 모양 5
    EYE_SLEEP_STAGE6,           // 잠자는 눈 모양 6 (완전히 감김/패턴)

} T_R310_EyeFontIndex_t;


// 로봇 상태 관리를 위한 열거형
typedef enum {
    AWAKE,   // 깨어있는 상태
    SLEEPING // 잠자는 상태
} T_R310_State;

// 로봇 눈 감정 애니메이션 종류
typedef enum {

    E_R310_NONE,          // 애니메이션 없음
    E_R310_NEUTRAL,       // 일반적인 눈 모양
    E_R310_BLINK,         // 깜빡임
    E_R310_WINK,          // 윙크
    E_R310_LOOK_L,        // 왼쪽 보기
    E_R310_LOOK_R,        // 오른쪽 보기
    E_R310_LOOK_U,        // 위 보기
    E_R310_LOOK_D,        // 아래 보기

	E_R310_SCAN_UD,       // 상하 스캔
    E_R310_SCAN_LR,       // 좌우 스캔

	E_R310_SQUINT_BLINK,  // 찡그림 깜빡임

    E_R310_ANGRY,         // 화남
    E_R310_SAD,           // 슬픔
    E_R310_EVIL,          // 사악함
    E_R310_EVIL2,         // 사악함 2 (찡그림 기반)
    E_R310_SQUINT,        // 찡그림
    E_R310_DEAD,          // 죽은 눈
    E_R310_IDLE,          // 대기 상태 (찡그린 눈 고정)
    E_R310_HEART,         // 하트
    E_R310_SLEEP,         // 잠자는 눈
} T_R310_emotion_t;

// 애니메이션 시퀀스 단일 프레임
typedef struct {
    uint8_t     eyeData[2];  // [0] = 오른쪽 눈 폰트 인덱스, [1] = 왼쪽 눈 폰트 인덱스
    uint16_t    timeFrame;  // 프레임 표시 시간 (밀리초)
} T_R310_animFrame_t;

// 감정 애니메이션 시퀀스 조회 테이블 항목
typedef struct {
    T_R310_emotion_t            e;          // 감정 종류
    const T_R310_animFrame_t* seq;        // 시퀀스 데이터 PROGMEM 주소
    uint8_t                     size;       // 시퀀스 총 프레임 개수
} T_R310_animTable_t;

// 애니메이션 상태 머신(FSM) 상태
typedef enum {
    S_IDLE,      // 유휴 상태
    S_RESTART,   // 재시작 준비 상태
    S_ANIMATE,   // 애니메이션 실행 상태
    S_PAUSE,     // 프레임 대기 상태
    S_TEXT,      // 텍스트 표시 상태
} T_R310_animState_t;


// --- 정적 데이터 테이블 정의 (PROGMEM에 저장, g_R310_ 로 시작) ---
// 각 배열은 특정 감정 애니메이션의 프레임 시퀀스를 나타냅니다.
// 각 요소는 T_R310_animFrame_t 구조체이며,
// { {오른쪽 눈 폰트 인덱스, 왼쪽 눈 폰트 인덱스}, 해당 프레임 표시 시간(ms) } 형식입니다.

// 깜빡임 애니메이션 시퀀스 데이터
const T_R310_animFrame_t g_R310_seqBlink[] PROGMEM = {
    {{ EYE_NEUTRAL	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 0: 기본 눈 모양
    {{ EYE_CLOSE_1	, EYE_CLOSE_1   }, G_R310_FRAME_TIME / 2}, // 프레임 1: 살짝 감김
    {{ EYE_CLOSE_2	, EYE_CLOSE_2   }, G_R310_FRAME_TIME / 2}, // 프레임 2: 더 감김
    {{ EYE_CLOSE_3	, EYE_CLOSE_3	}, G_R310_FRAME_TIME / 2}, // 프레임 3: 거의 감김
    {{ EYE_CLOSE_4	, EYE_CLOSE_4   }, G_R310_FRAME_TIME / 2}, // 프레임 4: 거의 완전히 감김
    {{ EYE_CLOSE_5	, EYE_CLOSE_5   }, G_R310_FRAME_TIME / 2}, // 프레임 4: 거의 완전히 감김
    {{ EYE_ALL_OFF	, EYE_ALL_OFF   }, G_R310_FRAME_TIME},     // 프레임 5: 완전히 감김 (최대 시간 유지)
     
};

// 윙크 애니메이션 시퀀스 데이터 (오른쪽 눈 윙크 기준)
const T_R310_animFrame_t g_R310_seqWink[] PROGMEM = {
    {{ EYE_NEUTRAL	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 0: 기본 눈 모양
    {{ EYE_CLOSE_1	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 1: 오른쪽 눈 살짝 감김
    {{ EYE_CLOSE_2	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 2: 오른쪽 눈 더 감김
    {{ EYE_CLOSE_3	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 3: 오른쪽 눈 거의 감김
    {{ EYE_CLOSE_4	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 4: 오른쪽 눈 거의 완전히 감김
    {{ EYE_CLOSE_5	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 4: 오른쪽 눈 거의 완전히 감김
    {{ EYE_ALL_OFF	, EYE_NEUTRAL	}, G_R310_FRAME_TIME * 2}, // 프레임 5: 오른쪽 눈 완전히 감김 (최대 시간 유지)
};

// 오른쪽 보기 애니메이션 시퀀스 데이터
const T_R310_animFrame_t g_R310_seqRight[] PROGMEM = {
    {{ EYE_NEUTRAL		, EYE_NEUTRAL       }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYE_LOOK_RIGHT_1	, EYE_LOOK_RIGHT_1 	}, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 오른쪽 이동 시작
    {{ EYE_LOOK_RIGHT_2	, EYE_LOOK_RIGHT_1	}, G_R310_FRAME_TIME * 5}, // 프레임 2: 눈동자 오른쪽 끝 (최대 시간 유지)
};

// 왼쪽 보기 애니메이션 시퀀스 데이터
const T_R310_animFrame_t g_R310_seqLeft[] PROGMEM = {
    {{ EYE_NEUTRAL      , EYE_NEUTRAL       }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYE_LOOK_LEFT_1  , EYE_LOOK_LEFT_1   }, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 왼쪽 이동 시작
    {{ EYE_LOOK_LEFT_2  , EYE_LOOK_LEFT_2   }, G_R310_FRAME_TIME * 5}, // 프레임 2: 눈동자 왼쪽 끝 (최대 시간 유지)
};

// 위 보기 애니메이션 시퀀스 데이터
const T_R310_animFrame_t g_R310_seqUp[] PROGMEM = {
    {{ EYE_NEUTRAL      , EYE_NEUTRAL   }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYE_LOOK_UP_1    , EYE_LOOK_UP_1 }, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 위 이동 시작
    {{ EYE_LOOK_UP_2    , EYE_LOOK_UP_2 }, G_R310_FRAME_TIME * 5}, // 프레임 2: 눈동자 더 위로
};

// 아래 보기 애니메이션 시퀀스 데이터
const T_R310_animFrame_t g_R310_seqDown[] PROGMEM = {
    {{ EYE_NEUTRAL      , EYE_NEUTRAL       }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYE_LOOK_DOWN_1  , EYE_LOOK_DOWN_1   }, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 아래 이동 시작
    {{ EYE_LOOK_DOWN_2  , EYE_LOOK_DOWN_2   }, G_R310_FRAME_TIME * 5}, // 프레임 2: 눈동자 더 아래로
};

// 화남 애니메이션 시퀀스 데이터 (좌우 눈 모양 인덱스 다름)
const T_R310_animFrame_t g_R310_seqAngry[] PROGMEM = {
    {{ EYE_NEUTRAL,         EYE_NEUTRAL       }, G_R310_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{ EYE_ANGRY_RIGHT_1,   EYE_ANGRY_LEFT_1  }, G_R310_FRAME_TIME},   // 프레임 1: 눈썹 찡그림 시작
    {{ EYE_ANGRY_RIGHT_2,   EYE_ANGRY_LEFT_2  }, G_R310_FRAME_TIME},   // 프레임 2: 눈썹 더 찡그림
    {{ EYE_ANGRY_RIGHT_3,   EYE_ANGRY_LEFT_3  }, 2000},                // 프레임 3: 가장 화난 눈 모양 (2초 유지)
};

// 슬픔 애니메이션 시퀀스 데이터 (좌우 눈 모양 인덱스 다름)
const T_R310_animFrame_t g_R310_seqSad[] PROGMEM = {
    {{ EYE_NEUTRAL,       EYE_NEUTRAL     }, G_R310_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{ EYE_SAD_RIGHT_1,   EYE_SAD_LEFT_1  }, G_R310_FRAME_TIME},   // 프레임 1: 눈꼬리 처짐 시작
    {{ EYE_SAD_RIGHT_2,   EYE_SAD_LEFT_2  }, G_R310_FRAME_TIME},   // 프레임 2: 눈꼬리 더 처짐
    {{ EYE_SAD_RIGHT_3,   EYE_SAD_LEFT_3  }, 2000},                // 프레임 3: 가장 슬픈 눈 모양 (2초 유지)
};

// 사악함 애니메이션 시퀀스 데이터 (좌우 눈 모양 인덱스 다름)
const T_R310_animFrame_t g_R310_seqEvil[] PROGMEM = {
    {{ EYE_NEUTRAL,        EYE_NEUTRAL      }, G_R310_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{ EYE_EVIL_RIGHT_1,   EYE_EVIL_LEFT_1  }, G_R310_FRAME_TIME},   // 프레임 1: 눈썹 치켜올림 시작
    {{ EYE_EVIL_RIGHT_2,   EYE_EVIL_LEFT_2  }, 2000},                // 프레임 2: 가장 사악한 눈 모양 (2초 유지)
};

// 사악함 2 애니메이션 시퀀스 데이터 (좌우 눈 모양 인덱스 다름) - 찡그린 눈 기반
const T_R310_animFrame_t g_R310_seqEvil2[] PROGMEM = {
    {{ EYE_NEUTRAL,           EYE_NEUTRAL           }, G_R310_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{ EYE_SQUINTED,          EYE_CLOSE_1   }, G_R310_FRAME_TIME},   // 프레임 1: 좌우 비대칭 눈 모양 시작
    {{ EYE_SQUINTED,          EYE_CLOSE_2   }, G_R310_FRAME_TIME},   // 프레임 2: 좌우 비대칭 진행
    {{ EYE_SQUINTED,          EYE_CLOSE_3 }, G_R310_FRAME_TIME},   // 프레임 3: 좌우 비대칭 진행
    {{ EYE_SQUINTED,          EYE_CLOSE_4    }, 2000},                // 프레임 4: 좌우 비대칭 최종 상태 (2초 유지)
};

// 찡그림 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_animFrame_t g_R310_seqSquint[] PROGMEM = {
    {{ EYE_NEUTRAL,  EYE_NEUTRAL  }, G_R310_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{ EYE_SQUINTED, EYE_SQUINTED }, G_R310_FRAME_TIME},   // 프레임 1: 눈 살짝 찡그림 시작 (원래는 여러 단계 필요)
    {{ EYE_SQUINTED, EYE_SQUINTED }, G_R310_FRAME_TIME},   // 프레임 2: 눈 더 찡그림
    {{ EYE_SQUINTED, EYE_SQUINTED }, G_R310_FRAME_TIME},   // 프레임 3: 눈 많이 찡그림
    {{ EYE_SQUINTED, EYE_SQUINTED }, 2000},                // 프레임 4: 최대로 찡그린 모양 (2초 유지)
};

// 죽은 눈 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_animFrame_t g_R310_seqDead[] PROGMEM = {
    {{ EYE_X_SHAPE_1, EYE_X_SHAPE_1 }, G_R310_FRAME_TIME * 4},// 프레임 0: X자 눈 모양 1 (400ms 유지)
    {{ EYE_X_SHAPE_2, EYE_X_SHAPE_2 }, G_R310_FRAME_TIME * 4},// 프레임 1: X자 눈 모양 2 (400ms 유지)
    {{ EYE_X_SHAPE_1, EYE_X_SHAPE_1 }, G_R310_FRAME_TIME * 2},// 프레임 2: X자 눈 모양 1 (200ms 유지) - 짧게 반복되는 효과
};

// 좌우 스캔 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_animFrame_t g_R310_seqScanLeftRight[] PROGMEM = {
    {{ EYE_LOOK_LEFT_1  , EYE_LOOK_LEFT_1   }, G_R310_FRAME_TIME},   // 프레임 1: 눈동자 이동
    {{ EYE_LOOK_LEFT_2  , EYE_LOOK_LEFT_2   }, G_R310_FRAME_TIME * 2},// 프레임 0: 눈동자 왼쪽 끝 (200ms 유지)
    {{ EYE_LOOK_LEFT_1  , EYE_LOOK_LEFT_1   }, G_R310_FRAME_TIME},   // 프레임 1: 눈동자 이동
    {{ EYE_NEUTRAL      , EYE_NEUTRAL       }, G_R310_FRAME_TIME},   // 프레임 1: 눈동자 이동
    {{ EYE_LOOK_RIGHT_1 , EYE_LOOK_RIGHT_1  }, G_R310_FRAME_TIME},   // 프레임 2: 눈동자 이동
    {{ EYE_LOOK_RIGHT_1 , EYE_LOOK_RIGHT_1  }, G_R310_FRAME_TIME},   // 프레임 2: 눈동자 이동
    {{ EYE_LOOK_RIGHT_2 , EYE_LOOK_RIGHT_2  }, G_R310_FRAME_TIME * 2},   // 프레임 3: 눈동자 오른쪽 끝 (원래 폰트 인덱스로 변경)
    {{ EYE_LOOK_RIGHT_1 , EYE_LOOK_RIGHT_1  }, G_R310_FRAME_TIME},   // 프레임 2: 눈동자 이동
};

// 상하 스캔 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_animFrame_t g_R310_seqScanUpDown[] PROGMEM = {
    {{ EYE_LOOK_UP_1    , EYE_LOOK_UP_1     }, G_R310_FRAME_TIME},// 프레임 0: 눈동자 위쪽 중간 (200ms 유지)
    {{ EYE_LOOK_UP_2    , EYE_LOOK_UP_2     }, G_R310_FRAME_TIME * 2},   // 프레임 1: 눈동자 이동
    {{ EYE_LOOK_UP_1    , EYE_LOOK_UP_1     }, G_R310_FRAME_TIME},   // 프레임 2: 눈동자 이동
    {{ EYE_NEUTRAL      , EYE_NEUTRAL       }, G_R310_FRAME_TIME},   // 프레임 3: 눈동자 아래 끝 (원래 폰트 인덱스로 변경)
    {{ EYE_LOOK_DOWN_1  , EYE_LOOK_DOWN_1   }, G_R310_FRAME_TIME}, // 프레임 4: 눈동자 위쪽 끝
    {{ EYE_LOOK_DOWN_2  , EYE_LOOK_DOWN_2   }, G_R310_FRAME_TIME * 2}, // 프레임 5: 눈동자 위쪽 중간 (원래 폰트 인덱스로 변경)
    {{ EYE_LOOK_DOWN_1  , EYE_LOOK_DOWN_1   }, G_R310_FRAME_TIME},
};

// 찡그림 깜빡임 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_animFrame_t g_R310_seqSquintBlink[] PROGMEM = {
    {{ EYE_CLOSE_4         	, EYE_CLOSE_4      }, G_R310_FRAME_TIME},   // 프레임 0: 최대로 찡그린 모양
    {{ EYE_CLOSE_5         	, EYE_CLOSE_5      }, G_R310_FRAME_TIME},   // 프레임 0: 최대로 찡그린 모양
    {{ EYE_ALL_OFF          , EYE_ALL_OFF      }, G_R310_FRAME_TIME},   // 프레임 1: 완전히 감긴 모양
};

// 대기 상태 눈 모양 시퀀스 데이터 (정적 표시)
const T_R310_animFrame_t g_R310_seqIdle[] PROGMEM = {
    {{ EYE_SQUINTED, EYE_SQUINTED }, G_R310_FRAME_TIME},   // 프레임 0: 최대로 찡그린 모양 유지
};

// 하트 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_animFrame_t g_R310_seqHeart[] PROGMEM = {
    {{ EYE_NEUTRAL,        EYE_NEUTRAL        }, G_R310_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{ EYE_HEART_STAGE1,   EYE_HEART_STAGE1   }, G_R310_FRAME_TIME},   // 프레임 1: 하트 모양 나타남
    {{ EYE_HEART_STAGE2,   EYE_HEART_STAGE2   }, 2000},                // 프레임 2: 완성된 하트 모양 (2초 유지)
};

// 잠자는 눈 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_animFrame_t g_R310_seqSleep[] PROGMEM = {
    {{ EYE_NEUTRAL,      EYE_NEUTRAL      }, G_R310_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{ EYE_SLEEP_STAGE1, EYE_SLEEP_STAGE1 }, G_R310_FRAME_TIME},   // 프레임 1: 감기기 시작
    {{ EYE_SLEEP_STAGE2, EYE_SLEEP_STAGE2 }, G_R310_FRAME_TIME},   // 프레임 2: 더 감김
    {{ EYE_SLEEP_STAGE3, EYE_SLEEP_STAGE3 }, G_R310_FRAME_TIME},   // 프레임 3: 더 감김
    {{ EYE_SLEEP_STAGE4, EYE_SLEEP_STAGE4 }, G_R310_FRAME_TIME},   // 프레임 4: 더 감김
    {{ EYE_SLEEP_STAGE5, EYE_SLEEP_STAGE5 }, G_R310_FRAME_TIME},   // 프레임 5: 더 감김
    {{ EYE_SLEEP_STAGE6, EYE_SLEEP_STAGE6 }, G_R310_FRAME_TIME},   // 프레임 6: 완전히 감긴 모양 또는 패턴 등
};


// 감정 애니메이션 조회 테이블
const T_R310_animTable_t g_R310_lookupTable[] PROGMEM = {
    {E_R310_NEUTRAL      , g_R310_seqBlink        , 1                                  }, // 중립: Blink 시퀀스의 첫 프레임만 사용 (정적)
    
	{E_R310_BLINK        , g_R310_seqBlink        , G_R310_ARRAY_SIZE(g_R310_seqBlink) }, // 깜빡임
    {E_R310_WINK         , g_R310_seqWink         , G_R310_ARRAY_SIZE(g_R310_seqWink)  }, // 윙크
    
	{E_R310_LOOK_L       , g_R310_seqLeft         , G_R310_ARRAY_SIZE(g_R310_seqLeft)  }, // 왼쪽 보기
    {E_R310_LOOK_R       , g_R310_seqRight        , G_R310_ARRAY_SIZE(g_R310_seqRight) }, // 오른쪽 보기
 
	{E_R310_LOOK_U       , g_R310_seqUp           , G_R310_ARRAY_SIZE(g_R310_seqUp)    }, // 위 보기
    {E_R310_LOOK_D       , g_R310_seqDown         , G_R310_ARRAY_SIZE(g_R310_seqDown)  }, // 아래 보기

	{E_R310_SCAN_LR      , g_R310_seqScanLeftRight, G_R310_ARRAY_SIZE(g_R310_seqScanLeftRight)}, // 좌우 스캔
    {E_R310_SCAN_UD      , g_R310_seqScanUpDown   , G_R310_ARRAY_SIZE(g_R310_seqScanUpDown)}, // 상하 스캔

	{E_R310_SQUINT_BLINK , g_R310_seqSquintBlink  , G_R310_ARRAY_SIZE(g_R310_seqSquintBlink)}, // 찡그림 깜빡임

    {E_R310_ANGRY        , g_R310_seqAngry        , G_R310_ARRAY_SIZE(g_R310_seqAngry) }, // 화남
    {E_R310_SAD          , g_R310_seqSad          , G_R310_ARRAY_SIZE(g_R310_seqSad)   }, // 슬픔
    {E_R310_EVIL         , g_R310_seqEvil         , G_R310_ARRAY_SIZE(g_R310_seqEvil)  }, // 사악함
    {E_R310_EVIL2        , g_R310_seqEvil2        , G_R310_ARRAY_SIZE(g_R310_seqEvil2) }, // 사악함 2
    {E_R310_DEAD         , g_R310_seqDead         , G_R310_ARRAY_SIZE(g_R310_seqDead)  }, // 죽은 눈
    {E_R310_IDLE         , g_R310_seqIdle         , G_R310_ARRAY_SIZE(g_R310_seqIdle)  }, // 대기 상태
    {E_R310_SQUINT       , g_R310_seqSquint       , G_R310_ARRAY_SIZE(g_R310_seqSquint)}, // 찡그림
    {E_R310_HEART        , g_R310_seqHeart        , G_R310_ARRAY_SIZE(g_R310_seqHeart) }, // 하트
    {E_R310_SLEEP        , g_R310_seqSleep        , G_R310_ARRAY_SIZE(g_R310_seqSleep)}, // 잠자는 눈
};


// 로봇 눈 모양 폰트 데이터 배열
// PROGMEM 키워드는 데이터를 AVR 마이크로컨트롤러의 플래시 메모리에 저장하여
// SRAM 사용량을 절약하는 데 사용됩니다.
const T_R310_SimpleFontChar g_R310_RobotEyes_Font[] PROGMEM = {
    // 인덱스 0: EYE_NEUTRAL (중립/행복한 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},

    // 인덱스 1: EYE_LOOK_DOWN_2 (아래쪽 먼 곳을 보는 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b00111100  //  . . # # # # . .
    }},
    
    // 인덱스 2: EYE_LOOK_DOWN_1 (아래쪽 중앙을 보는 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},


    // 인덱스 3: EYE_LOOK_UP_1 (위쪽 중앙을 보는 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},

    // 인덱스 4: EYE_LOOK_UP_2 (위쪽 먼 곳을 보는 눈)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000, //  . . . . . . . .
        0b00000000  //  . . . . . . . .
    }},
    
    // 인덱스 5: EYE_LOOK_LEFT_2 (왼쪽을 보는 눈, 작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b01111000, //  . # # # # . . .
        0b11111100, //  # # # # # # . .
        0b10011100, //  # . . # # # . .
        0b10011100, //  # . . # # # . .
        0b11111100, //  # # # # # # . .
        0b01111000, //  . # # # # . . .
        0b00000000  //  . . . . . . . .
    }},

    // 인덱스 6: EYE_LOOK_LEFT_1 (오른쪽을 보는 눈, 작은 눈동자)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    
    // 인덱스 7: EYE_LOOK_RIGHT_1 (왼쪽을 보는 눈, 비대칭)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},

    // 인덱스 8: EYE_LOOK_RIGHT_2 (오른쪽을 보는 눈, 비대칭)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00011110, //  . . . # # # # .
        0b00111111, //  . . # # # # # #
        0b00111001, //  . . # # # . . #
        0b00111001, //  . . # # # . . #
        0b00111111, //  . . # # # # # #
        0b00011110, //  . . . # # # # .
        0b00000000  //  . . . . . . . .
    }},

    // 인덱스 9: EYE_CLOSE_1 (눈꺼풀이 절반 감긴 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01111110, //  . # # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 10: EYE_CLOSE_2 (눈꺼풀이 더 감긴 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 11: EYE_CLOSE_3 (눈꺼풀이 거의 감긴 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01100110, //  . # # . . # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 12: EYE_CLOSE_4 (눈동자만 보이는 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 13: EYE_CLOSE_5 (매우 작은 눈동자만 보이는 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},

    // 인덱스 47: EYE_ALL_OFF (잠자는 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00000000  //  . . . . . . . .
    }},





    // 인덱스 14: EYE_X_SHAPE_1 (X자 눈 모양 1)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000, //  . . . . . . . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 15: EYE_X_SHAPE_2 (X자 눈 모양 2)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000, //  . . . . . . . .
        0b00000000  //  . . . . . . . .
    }},

    // 인덱스 16: EYE_ANGRY_RIGHT_1 (화난 오른쪽 눈 1 - 눈썹 찡그림 시작)
    {8, {
        0b00100100, //  . . # . . # . .
        0b01011010, //  . # . # # . # .
        0b10011001, //  # . . # # . . #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b01000010, //  . # . . . . # .
        0b00100100, //  . . # . . # . .
        0b00011000  //  . . . # # . . .
    }},
    // 인덱스 17: EYE_ANGRY_LEFT_1 (화난 왼쪽 눈 1 - 눈썹 찡그림 시작)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00100100, //  . . # . . # . .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b00100100, //  . . # . . # . .
        0b00011000, //  . . . # # . . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 18: EYE_ANGRY_RIGHT_2 (화난 오른쪽 눈 2 - 눈썹 더 찡그림)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00100100, //  . . # . . # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00011000, //  . . . # # . . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 19: EYE_ANGRY_LEFT_2 (화난 왼쪽 눈 2 - 눈썹 더 찡그림)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00100100, //  . . # . . # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00011000, //  . . . # # . . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 20: EYE_ANGRY_RIGHT_3 (화난 오른쪽 눈 3 - 가장 화난 눈)
    {8, {
        0b11111111, //  # # # # # # # #
        0b11011011, //  # # . # # . # #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b11000011, //  # # . . . . # #
        0b11100111, //  # # # . . # # #
        0b11111111  //  # # # # # # # #
    }},
    // 인덱스 21: EYE_ANGRY_LEFT_3 (화난 왼쪽 눈 3 - 가장 화난 눈)
    {8, { // (20번과 동일한 데이터로 가정)
        0b11111111, //  # # # # # # # #
        0b11011011, //  # # . # # . # #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b11000011, //  # # . . . . # #
        0b11100111, //  # # # . . # # #
        0b11111111  //  # # # # # # # #
    }},

    // 인덱스 22: EYE_SAD_RIGHT_1 (슬픈 오른쪽 눈 1 - 눈꼬리 처짐 시작)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111000, //  . . # # # . . .
        0b01001100, //  . # . . # # . .
        0b01001110, //  . # . . # # # .
        0b01111110, //  . # # # # # # .
        0b00111110, //  . . # # # # # .
        0b00011100, //  . . . # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 23: EYE_SAD_LEFT_1 (슬픈 왼쪽 눈 1 - 눈꼬리 처짐 시작)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111000, //  . . # # # . . .
        0b01111100, //  . # # # # # . .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b00111110, //  . . # # # # # .
        0b00011100, //  . . . # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 24: EYE_SAD_RIGHT_2 (슬픈 오른쪽 눈 2 - 눈꼬리 더 처짐)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111000, //  . . # # # . . .
        0b01111100, //  . # # # # # . .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b00111110, //  . . # # # # # .
        0b00011100, //  . . . # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 25: EYE_SAD_LEFT_2 (슬픈 왼쪽 눈 2 - 눈꼬리 더 처짐)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00011100, //  . . . # # # . .
        0b00110010, //  . . # # . . # .
        0b01110010, //  . # # # . . # .
        0b01111110, //  . # # # # # # .
        0b01111100, //  . # # # # # . .
        0b00111000, //  . . # # # . . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 26: EYE_SAD_RIGHT_3 (슬픈 오른쪽 눈 3 - 가장 슬픈 눈)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00011100, //  . . . # # # . .
        0b00111110, //  . . # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111100, //  . # # # # # . .
        0b00111000, //  . . # # # . . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 27: EYE_SAD_LEFT_3 (슬픈 왼쪽 눈 3 - 가장 슬픈 눈)
    {8, { // (26번과 동일한 데이터로 가정)
        0b00000000, //  . . . . . . . .
        0b00011100, //  . . . # # # . .
        0b00111110, //  . . # # # # # .
        0b01100110, //  . # # . . # # .
        0b01100110, //  . # # . . # # .
        0b01111100, //  . # # # # # . .
        0b00111000, //  . . # # # . . .
        0b00000000  //  . . . . . . . .
    }},


    // 인덱스 28: EYE_EVIL_RIGHT_1 (사악한 오른쪽 눈 1 - 눈썹 치켜올림 시작)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00100100, //  . . # . . # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00011000, //  . . . # # . . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 29: EYE_EVIL_LEFT_1 (사악한 왼쪽 눈 1 - 눈썹 치켜올림 시작)
    {8, { // (28번과 동일한 데이터로 가정)
        0b00000000, //  . . . . . . . .
        0b00000000, //  . . . . . . . .
        0b00100100, //  . . # . . # . .
        0b01111110, //  . # # # # # # .
        0b01111110, //  . # # # # # # .
        0b00111100, //  . . # # # # . .
        0b00011000, //  . . . # # . . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 30: EYE_EVIL_RIGHT_2 (사악한 오른쪽 눈 2 - 가장 사악한 눈)
    {8, {
        0b11111111, //  # # # # # # # #
        0b11011011, //  # # . # # . # #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b11000011, //  # # . . . . # #
        0b11100111, //  # # # . . # # #
        0b11111111  //  # # # # # # # #
    }},
    // 인덱스 31: EYE_EVIL_LEFT_2 (사악한 왼쪽 눈 2 - 가장 사악한 눈)
    {8, { // (30번과 동일한 데이터로 가정)
        0b11111111, //  # # # # # # # #
        0b11011011, //  # # . # # . # #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b10000001, //  # . . . . . . #
        0b11000011, //  # # . . . . # #
        0b11100111, //  # # # . . # # #
        0b11111111  //  # # # # # # # #
    }},


    // 인덱스 32: EYE_SCAN_LR_1 (좌우 스캔 눈동자 1 - 왼쪽 끝)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 33: EYE_SCAN_LR_2 (좌우 스캔 눈동자 2 - 중간)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b01110010, //  . # # # . . # .
        0b01110010, //  . # # # . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 34: EYE_SCAN_LR_3 (좌우 스캔 눈동자 3 - 오른쪽 끝)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 35: EYE_SCAN_UD_1 (상하 스캔 눈동자 1 - 위쪽 중간)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 36: EYE_SCAN_UD_2 (상하 스캔 눈동자 2 - 중간)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 37: EYE_SCAN_UD_3 (상하 스캔 눈동자 3 - 아래쪽 끝)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01011010, //  . # . # # . # .
        0b01011010, //  . # . # # . # .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},


    // 인덱스 38: EYE_SQUINTED (찡그린 눈 - 최대로 찡그린)
    {8, {
        0b00000000, //  . . . . . . . .
        0b00111100, //  . . # # # # . .
        0b01000010, //  . # . . . . # .
        0b01000010, //  . # . . . . # .
        0b01001110, //  . # . . # # # .
        0b01001110, //  . # . . # # # .
        0b00111100, //  . . # # # # . .
        0b00000000  //  . . . . . . . .
    }},
    // 인덱스 39: EYE_HEART_STAGE1 (하트 눈 모양 1)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }},
    // 인덱스 40: EYE_HEART_STAGE2 (하트 눈 모양 2)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }},
    // 인덱스 41: EYE_SLEEP_STAGE1 (잠자는 눈 모양 1)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }},
    // 인덱스 42: EYE_SLEEP_STAGE2 (잠자는 눈 모양 2)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }},
    // 인덱스 43: EYE_SLEEP_STAGE3 (잠자는 눈 모양 3)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }},
    // 인덱스 44: EYE_SLEEP_STAGE4 (잠자는 눈 모양 4)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }},
    // 인덱스 45: EYE_SLEEP_STAGE5 (잠자는 눈 모양 5)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }},
    // 인덱스 46: EYE_SLEEP_STAGE6 (잠자는 눈 모양 6 - 완전히 감김 또는 패턴)
    {8, {
        0b00111100, //  . . # # # # . .
        0b01111110, //  . # # # # # # .
        0b11111111, //  # # # # # # # #
        0b11100111, //  # # # . . # # #
        0b11100111, //  # # # . . # # #
        0b11111111, //  # # # # # # # #
        0b01111110, //  . # # # # # # .
        0b00111100  //  . . # # # # . .
    }},


};

// 폰트 데이터 배열의 길이 (T_R310_SimpleFontChar 개수)
const int G_R310_ROBOT_EYES_FONT_LEN = sizeof(g_R310_RobotEyes_Font) / sizeof(T_R310_SimpleFontChar);
