/*
 * 프로젝트명: MAX7219 8x8 매트릭스 2x2 디스플레이 제어
 * 설명: 4개의 MAX7219 8x8 LED 매트릭스 모듈을 2x2 형태로 연결하고,
 * 하나의 16x16 대형 디스플레이처럼 활용하여 비트맵 데이터를 표시한다.
 * 사용 MCU: PlatformIO Arduino Core를 사용하는 MCU (예: Arduino UNO, ESP32, ESP8266 등)
 * 사용 라이브러리: LedControl (wayoda/LedControl.git)
 */

/*
 * ==============================================================================
 * 1. 하드웨어 연결 요구사항
 * ==============================================================================
 */

// 1.1. MAX7219 모듈 개수: 총 4개 사용
//     - 각 모듈은 8x8 LED 매트릭스 포함

// 1.2. 전원 및 접지 연결:
//     - 모든 MAX7219 모듈의 VCC 핀을 MCU의 5V (또는 VCC)에 연결한다.
//     - 모든 MAX7219 모듈의 GND 핀을 MCU의 GND에 연결한다.

// 1.3. SPI 통신 핀 연결 (데이지 체인 방식):
//     - MCU의 DIN (Data In) 핀을 첫 번째 MAX7219 모듈 (#1)의 DIN 핀에 연결한다.
//       (예: Arduino UNO D11/MOSI)
//     - MCU의 CLK (Clock) 핀을 모든 MAX7219 모듈의 CLK 핀에 병렬로 연결한다.
//       (예: Arduino UNO D13/SCK)
//     - MCU의 CS (Chip Select) 핀을 모든 MAX7219 모듈의 CS 핀에 병렬로 연결한다.
//       (예: Arduino UNO D10/SS)
//     - 데이지 체인 순서: 모듈 #1 -> 모듈 #2 -> 모듈 #3 -> 모듈 #4
//       - 모듈 #1의 DOUT 핀을 모듈 #2의 DIN 핀에 연결한다.
//       - 모듈 #2의 DOUT 핀을 모듈 #3의 DIN 핀에 연결한다.
//       - 모듈 #3의 DOUT 핀을 모듈 #4의 DIN 핀에 연결한다.

/*
 * ==============================================================================
 * 2. 물리적 배치 요구사항
 * ==============================================================================
 */

// 2.1. 2x2 매트릭스 배치:
//     - 물리적으로 다음과 같이 배치한다.
//       +-------+   +-------+
//       | 모듈 #1 |   | 모듈 #2 |
//       | (상단 좌) |   | (상단 우) |
//       +-------+   +-------+
//       | 모듈 #3 |   | 모듈 #4 |
//       | (하단 좌) |   | (하단 우) |
//       +-------+   +-------+

/*
 * ==============================================================================
 * 3. 소프트웨어 로직 및 기능 요구사항
 * ==============================================================================
 */

// 3.1. 라이브러리 사용:
//     - LedControl 라이브러리 (GitHub: wayoda/LedControl.git)를 사용한다.

// 3.2. LedControl deviceIndex 매핑:
//     - 데이지 체인 연결 순서와 LedControl 라이브러리 인덱스 매핑을 고려하여 코드 작성.
//       - LedControl deviceIndex 3: 물리적 모듈 #1 (상단 좌)
//       - LedControl deviceIndex 2: 물리적 모듈 #2 (상단 우)
//       - LedControl deviceIndex 1: 물리적 모듈 #3 (하단 좌)
//       - LedControl deviceIndex 0: 물리적 모듈 #4 (하단 우)

// 3.3. 비트맵 데이터 정의:
//     - 4개 모듈을 하나의 16x16 픽셀 디스플레이로 간주한다.
//     - 표시할 각 문자/그림에 대한 16x16 비트맵 데이터를 정의한다.
//     - 비트맵 데이터는 uint16_t 배열로 정의하며, 각 요소는 16x16 화면의 한 행(16픽셀)을 나타낸다.
//     - 각 uint16_t 값은 2진수 표기 (0b...)로 정의하여 픽셀의 ON/OFF 상태를 명확히 표현한다.
//       - 예를 들어, 0b1000000011111111 와 같이 정의.
//       - 상위 8비트 (left_byte = value >> 8)는 해당 행의 왼쪽 8x8 모듈(모듈 #1 또는 #3)에 해당한다.
//       - 하위 8비트 (right_byte = value & 0xFF)는 해당 행의 오른쪽 8x8 모듈(모듈 #2 또는 #4)에 해당한다.

// 3.4. 비트맵 표시 함수:
//     - 정의된 16x16 비트맵 데이터를 4개의 MAX7219 모듈에 올바르게 분배하여 표시하는 함수를 구현한다.
//     - 이 함수는 LedControl.setRow() 함수를 활용하여 각 모듈의 해당 행에 데이터를 전송한다.
//       - 상위 8행 (0~7)은 상단 모듈 (#1, #2)에, 하위 8행 (8~15)은 하단 모듈 (#3, #4)에 매핑한다.

// 3.5. 디스플레이 초기화 및 제어:
//     - 모든 MAX7219 모듈을 초기화 (전원 켜기, 밝기 설정, 디스플레이 지우기).
//     - 특정 시간 간격으로 비트맵 데이터를 표시하고, 필요시 디스플레이를 지우는 로직을 포함한다.


#pragma once

// R310_data2_014.h - 로봇 눈 애니메이션 및 폰트 데이터 정의 파일
// 이 파일은 로봇 눈 애니메이션에 사용되는 모든 정적 데이터 테이블을 정의합니다.
// 데이터는 프로그램 메모리(PROGMEM)에 저장되어 RAM 사용량을 절약합니다.

// 기본 타입 및 설정 헤더 파일 포함
// 이 헤더 파일은 T_R310_로 시작하는 구조체 및 열거형과 G_R310_로 시작하는 상수를 정의합니다.
#include "R310_config_009.h" // G_R310_FRAME_TIME 및 G_R310_ARRAY_SIZE 정의를 포함해야 합니다.


// --- 전역 상수 정의 (G_R310_ 로 시작) ---
// 로봇 상태 관리를 위한 비활성 시간 기준 정의
// 예제: 로봇이 일정 시간(10초) 동안 명령을 받지 않으면 R_STATE_SLEEPING 상태로 전환됩니다.
const unsigned long G_R310_TIME_TO_SLEEP = 10000; // 밀리초 단위 (10초)


///////////////////////////////////

// 애니메이션 상태 머신(FSM) 상태
typedef enum {
    ANI_PLY_STATE_IDLE,      // 유휴 상태
    ANI_PLY_STATE_RESTART,   // 재시작 준비 상태
    ANI_PLY_STATE_ANIMATE,   // 애니메이션 실행 상태
    ANI_PLY_STATE_PAUSE,     // 프레임 대기 상태
    ANI_PLY_STATE_TEXT,      // 텍스트 표시 상태
} T_R310_ani_ply_state_t;


// 로봇 상태 관리를 위한 열거형
typedef enum {
    R_STATE_AWAKE,           // 깨어있는 상태
    R_STATE_SLEEPING         // 잠자는 상태
} T_R310_RobotState_t;

typedef enum {
    EMTP_AUTO_REVERSE_OFF,      // p_r 시퀀스 완료 후 자동 역재생 여부  g_R310_ani_ply_autoReverse
    EMTP_AUTO_REVERSE_ON,
} EMTP_Ply_AutoReverse_t;

typedef enum {
    EMTP_PLY_DIR_FIRST,      // p_b 애니메이션 시작 방향 (false: 정방향, true: 역방향) //g_R310_animReverse
    EMTP_PLY_DIR_LAST,
} EMTP_Ply_Direct_t;

typedef enum {
    EMTP_FORCE_PLY_OFF,     // p_force 현재 상태에 관계없이 즉시 시작 여부
    EMTP_FORCE_PLY_ON,
} EMTP_Ply_Force_t;


// --- 16x16 픽셀 이미지를 저장하는 새로운 구조체 정의 ---
// 각 픽셀 이미지는 16x16 이므로 16개의 uint16_t (2바이트)를 사용합니다.
typedef struct {
    uint8_t width;      // 문자의 너비 (여기서는 모든 이미지가 16픽셀이므로 16)
    uint16_t data[16];  // 문자의 픽셀 데이터 (각 uint16_t가 한 행을 나타냅니다)
} T_R310_FontChar_16x16_t; // 구조체 이름 변경: 16x16임을 명시


// Eye의 왼쪽,오른쪽 관리를 위한 열거형
typedef enum {
    EYE_RIGHT = 0,
    EYE_LEFT  = 1
} T_R310_EyeSide_Idx_t;


// --- 로봇 눈 모양 폰트 인덱스를 위한 열거형 정의 --- 각 폰트 인덱스는 특정 눈 모양에 대한 의미 있는 이름을 가집니다.
typedef enum {
    // 기본 눈 모양 (인덱스 0-4)
    EYE_NEUTRAL = 0,           // 중립/행복한 눈

    EYE_LOOK_DOWN_2,           // 아래쪽 먼 곳을 보는 눈
    EYE_LOOK_DOWN_1,           // 아래쪽 중앙을 보는 눈
    EYE_LOOK_UP_1,             // 위쪽 중앙을 보는 눈
    EYE_LOOK_UP_2,             // 위쪽 먼 곳을 보는 눈

    // 좌우 시선 이동 눈 모양 (인덱스 5-8)
    EYE_LOOK_LEFT_2,           // 왼쪽을 보는 눈 (작은 눈동자)
    EYE_LOOK_LEFT_1,           // 오른쪽을 보는 눈 (작은 눈동자)
    EYE_LOOK_RIGHT_1,          // 왼쪽을 보는 눈 (비대칭)
    EYE_LOOK_RIGHT_2,          // 오른쪽을 보는 눈 (비대칭)

    // 감기거나 찡그린 눈 모양 (인덱스 9-13)
    EYE_CLOSE_1,               // 눈꺼풀이 절반 감긴 눈
    EYE_CLOSE_2,               // 눈꺼풀이 더 감긴 눈
    EYE_CLOSE_3,               // 눈꺼풀이 거의 감긴 눈
    EYE_CLOSE_4,               // 눈동자만 보이는 눈
    EYE_CLOSE_5,               // 매우 작은 눈동자만 보이는 눈

    EYE_ALL_OFF,               // 모든 픽셀이 꺼진 눈

    // 슬픈 눈 모양 (인덱스 15-20)
    EYE_SAD_RIGHT_1,           // 슬픈 오른쪽 눈 1 (눈꼬리 처짐 시작)
    EYE_SAD_LEFT_1,            // 슬픈 왼쪽 눈 1 (눈꼬리 처짐 시작)
    EYE_SAD_RIGHT_2,           // 슬픈 오른쪽 눈 2 (눈꼬리 더 처짐)
    EYE_SAD_LEFT_2,            // 슬픈 왼쪽 눈 2 (눈꼬리 더 처짐)
    EYE_SAD_RIGHT_3,           // 슬픈 오른쪽 눈 3 (가장 슬픈 눈)
    EYE_SAD_LEFT_3,            // 슬픈 왼쪽 눈 3 (가장 슬픈 눈)

    // 대각선 시선 이동 눈 모양 (인덱스 21-30)
    EYS_DIAGONAL_RIGHT_1,
    EYS_DIAGONAL_RIGHT_2,
    EYS_DIAGONAL_RIGHT_3,
    EYS_DIAGONAL_RIGHT_4,
    EYS_DIAGONAL_RIGHT_5,
    EYS_DIAGONAL_LEFT_1,
    EYS_DIAGONAL_LEFT_2,
    EYS_DIAGONAL_LEFT_3,
    EYS_DIAGONAL_LEFT_4,
    EYS_DIAGONAL_LEFT_5,

    // X자 눈 모양 (인덱스 31-32)
    EYE_X_SHAPE_1,             // X자 눈 모양 1
    EYE_X_SHAPE_2,             // X자 눈 모양 2

    // 화난 눈 모양 (인덱스 33-38)
    EYE_ANGRY_RIGHT_1,         // 화난 오른쪽 눈 1 (눈썹 찡그림 시작)
    EYE_ANGRY_LEFT_1,          // 화난 왼쪽 눈 1 (눈썹 찡그림 시작)
    EYE_ANGRY_RIGHT_2,         // 화난 오른쪽 눈 2 (눈썹 더 찡그림)
    EYE_ANGRY_LEFT_2,          // 화난 왼쪽 눈 2 (눈썹 더 찡그림)
    EYE_ANGRY_RIGHT_3,         // 화난 오른쪽 눈 3 (가장 화난 눈)
    EYE_ANGRY_LEFT_3,          // 화난 왼쪽 눈 3 (가장 화난 눈)

    // 사악한 눈 모양 (인덱스 39-42)
    EYE_EVIL_RIGHT_1,          // 사악한 오른쪽 눈 1 (눈썹 치켜올림 시작)
    EYE_EVIL_LEFT_1,           // 사악한 왼쪽 눈 1 (눈썹 치켜올림 시작)
    EYE_EVIL_RIGHT_2,          // 사악한 오른쪽 눈 2 (가장 사악한 눈)
    EYE_EVIL_LEFT_2,           // 사악한 왼쪽 눈 2 (가장 사악한 눈)

    // 스캔 및 복합 눈 모양 (인덱스 43-48)
    EYE_SCAN_LR_1,             // 좌우 스캔 눈동자 1 (왼쪽 끝)
    EYE_SCAN_LR_2,             // 좌우 스캔 눈동자 2 (중간)
    EYE_SCAN_LR_3,             // 좌우 스캔 눈동자 3 (오른쪽 끝)
    EYE_SCAN_UD_1,             // 상하 스캔 눈동자 1 (위쪽 중간)
    EYE_SCAN_UD_2,             // 상하 스캔 눈동자 2 (중간)
    EYE_SCAN_UD_3,             // 상하 스캔 눈동자 3 (아래쪽 끝)

    // 기타 눈 모양 (인덱스 49-55)
    EYE_SQUINTED,              // 찡그린 눈 (최대로 찡그린)

    // TODO: 16x16에 맞는 나머지 폰트 인덱스 추가 및 데이터 정의
} T_R310_EyeFontIndex_t;


// 로봇 눈 감정 애니메이션 종류
typedef enum {

    EMT_NONE,          // 애니메이션 없음
    EMT_NEUTRAL,       // 일반적인 눈 모양
    EMT_BLINK,         // 깜빡임
    EMT_WINK,          // 윙크

    EMT_LOOK_L,        // 왼쪽 보기
    EMT_LOOK_R,        // 오른쪽 보기
    EMT_LOOK_U,        // 위 보기
    EMT_LOOK_D,        // 아래 보기
    EMT_SCAN_UD,       // 상하 스캔
    EMT_SCAN_LR,       // 좌우 스캔

    EMT_ANGRY2,
    EMT_SMILE,

    EMT_SLEEP,         // 잠자는 눈
    EMT_SLEEP_BLINK,

} T_R310_emotion_idx_t;

// 애니메이션 시퀀스 단일 프레임
typedef struct {
    uint8_t         eyeData[2];     // [0] = 오른쪽 눈 폰트 인덱스, [1] = 왼쪽 눈 폰트 인덱스
    uint16_t        timeFrame;      // 프레임 표시 시간 (밀리초)
} T_R310_ani_Frame_t;



// --- 정적 데이터 테이블 정의 (PROGMEM에 저장, g_R310_ 로 시작) ---
// 각 배열은 특정 감정 애니메이션의 프레임 시퀀스를 나타냅니다.
// 각 요소는 T_R310_animFrame_t 구조체이며,
// { {오른쪽 눈 폰트 인덱스, 왼쪽 눈 폰트 인덱스}, 해당 프레임 표시 시간(ms) } 형식입니다.

// 깜빡임 애니메이션 시퀀스 데이터
// NOTE: 16x16 폰트를 사용할 경우, 각 eyeData[0] 및 eyeData[1]은 16x16 폰트 인덱스를 참조합니다.
const T_R310_ani_Frame_t g_R310_frameSeq_Blink[] PROGMEM = {
    {{ EYE_NEUTRAL	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 0: 기본 눈 모양
    {{ EYE_CLOSE_1	, EYE_CLOSE_1   }, G_R310_FRAME_TIME / 2}, // 프레임 1: 살짝 감김
    {{ EYE_CLOSE_2	, EYE_CLOSE_2   }, G_R310_FRAME_TIME / 2}, // 프레임 2: 더 감김
    {{ EYE_CLOSE_3	, EYE_CLOSE_3	}, G_R310_FRAME_TIME / 2}, // 프레임 3: 거의 감김
    {{ EYE_CLOSE_4	, EYE_CLOSE_4   }, G_R310_FRAME_TIME / 2}, // 프레임 4: 거의 완전히 감김
    {{ EYE_CLOSE_5	, EYE_CLOSE_5   }, G_R310_FRAME_TIME / 2}, // 프레임 4: 거의 완전히 감김
    {{ EYE_ALL_OFF	, EYE_ALL_OFF   }, G_R310_FRAME_TIME},     // 프레임 5: 완전히 감김 (최대 시간 유지)

};

// 윙크 애니메이션 시퀀스 데이터 (오른쪽 눈 윙크 기준)
const T_R310_ani_Frame_t g_R310_frameSeq_Wink[] PROGMEM = {
    {{ EYE_NEUTRAL	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 0: 기본 눈 모양
    {{ EYE_CLOSE_1	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 1: 오른쪽 눈 살짝 감김
    {{ EYE_CLOSE_2	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 2: 오른쪽 눈 더 감김
    {{ EYE_CLOSE_3	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 3: 오른쪽 눈 거의 감김
    {{ EYE_CLOSE_4	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 4: 오른쪽 눈 거의 완전히 감김
    {{ EYE_CLOSE_5	, EYE_NEUTRAL	}, G_R310_FRAME_TIME / 2}, // 프레임 4: 오른쪽 눈 거의 완전히 감김
    {{ EYE_ALL_OFF	, EYE_NEUTRAL	}, G_R310_FRAME_TIME * 2}, // 프레임 5: 오른쪽 눈 완전히 감김 (최대 시간 유지)
};

// 오른쪽 보기 애니메이션 시퀀스 데이터
const T_R310_ani_Frame_t g_R310_frameSeq_Right[] PROGMEM = {
    {{ EYE_NEUTRAL		, EYE_NEUTRAL       }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYE_LOOK_RIGHT_1	, EYE_LOOK_RIGHT_1 	}, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 오른쪽 이동 시작
    {{ EYE_LOOK_RIGHT_2	, EYE_LOOK_RIGHT_2	}, G_R310_FRAME_TIME * 5}, // 프레임 2: 눈동자 오른쪽 끝 (최대 시간 유지)
};

// 왼쪽 보기 애니메이션 시퀀스 데이터
const T_R310_ani_Frame_t g_R310_frameSeq_Left[] PROGMEM = {
    {{ EYE_NEUTRAL      , EYE_NEUTRAL       }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYE_LOOK_LEFT_1  , EYE_LOOK_LEFT_1   }, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 왼쪽 이동 시작
    {{ EYE_LOOK_LEFT_2  , EYE_LOOK_LEFT_2   }, G_R310_FRAME_TIME * 5}, // 프레임 2: 눈동자 왼쪽 끝 (최대 시간 유지)
};

// 위 보기 애니메이션 시퀀스 데이터
const T_R310_ani_Frame_t g_R310_frameSeq_Up[] PROGMEM = {
    {{ EYE_NEUTRAL      , EYE_NEUTRAL   }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYE_LOOK_UP_1    , EYE_LOOK_UP_1 }, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 위 이동 시작
    {{ EYE_LOOK_UP_2    , EYE_LOOK_UP_2 }, G_R310_FRAME_TIME * 5}, // 프레임 2: 눈동자 더 위로
};

// 아래 보기 애니메이션 시퀀스 데이터
const T_R310_ani_Frame_t g_R310_frameSeq_Down[] PROGMEM = {
    {{ EYE_NEUTRAL      , EYE_NEUTRAL       }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYE_LOOK_DOWN_1  , EYE_LOOK_DOWN_1   }, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 아래 이동 시작
    {{ EYE_LOOK_DOWN_2  , EYE_LOOK_DOWN_2   }, G_R310_FRAME_TIME * 5}, // 프레임 2: 눈동자 더 아래로
};

// 좌우 스캔 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_ani_Frame_t g_R310_frameSeq_ScanLeftRight[] PROGMEM = {
    {{ EYE_LOOK_LEFT_1  , EYE_LOOK_LEFT_1   }, G_R310_FRAME_TIME},   // 프레임 1: 눈동자 이동
    {{ EYE_LOOK_LEFT_2  , EYE_LOOK_LEFT_2   }, G_R310_FRAME_TIME * 2},// 프레임 0: 눈동자 왼쪽 끝 (200ms 유지)
    {{ EYE_LOOK_LEFT_1  , EYE_LOOK_LEFT_1   }, G_R310_FRAME_TIME},   // 프레임 1: 눈동자 이동
    {{ EYE_NEUTRAL      , EYE_NEUTRAL       }, G_R310_FRAME_TIME},   // 프레임 1: 눈동자 이동
    {{ EYE_LOOK_RIGHT_1 , EYE_LOOK_RIGHT_1  }, G_R310_FRAME_TIME},   // 프레임 2: 눈동자 이동
    {{ EYE_LOOK_RIGHT_1 , EYE_LOOK_RIGHT_1  }, G_R310_FRAME_TIME},   // 프레임 2: 눈동자 이동
    {{ EYE_LOOK_RIGHT_2 , EYE_LOOK_RIGHT_2  }, G_R310_FRAME_TIME * 2},   // 프레임 3: 눈동자 오른쪽 끝 (원래 폰트 인덱스로 변경)
    {{ EYE_LOOK_RIGHT_1 , EYE_LOOK_RIGHT_1  }, G_R310_FRAME_TIME},   // 프레임 2: 눈동자 이동
};

// 상하 스캔 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_ani_Frame_t g_R310_frameSeq_ScanUpDown[] PROGMEM = {
    {{ EYE_LOOK_UP_1    , EYE_LOOK_UP_1     }, G_R310_FRAME_TIME},// 프레임 0: 눈동자 위쪽 중간 (200ms 유지)
    {{ EYE_LOOK_UP_2    , EYE_LOOK_UP_2     }, G_R310_FRAME_TIME * 2},   // 프레임 1: 눈동자 이동
    {{ EYE_LOOK_UP_1    , EYE_LOOK_UP_1     }, G_R310_FRAME_TIME},   // 프레임 2: 눈동자 이동
    {{ EYE_NEUTRAL      , EYE_NEUTRAL       }, G_R310_FRAME_TIME},   // 프레임 3: 눈동자 아래 끝 (원래 폰트 인덱스로 변경)
    {{ EYE_LOOK_DOWN_1  , EYE_LOOK_DOWN_1   }, G_R310_FRAME_TIME}, // 프레임 4: 눈동자 위쪽 끝
    {{ EYE_LOOK_DOWN_2  , EYE_LOOK_DOWN_2   }, G_R310_FRAME_TIME * 2}, // 프레임 5: 눈동자 위쪽 중간 (원래 폰트 인덱스로 변경)
    {{ EYE_LOOK_DOWN_1  , EYE_LOOK_DOWN_1   }, G_R310_FRAME_TIME},
};

// 화남 2
const T_R310_ani_Frame_t g_R310_frameSeq_Angry2[] PROGMEM = {
    {{ EYE_NEUTRAL           , EYE_NEUTRAL              }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYS_DIAGONAL_RIGHT_1  , EYS_DIAGONAL_LEFT_1      }, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 아래 이동 시작
    {{ EYS_DIAGONAL_RIGHT_2  , EYS_DIAGONAL_LEFT_2      }, G_R310_FRAME_TIME    }, // 프레임 2: 눈동자 더 아래로
    {{ EYS_DIAGONAL_RIGHT_3  , EYS_DIAGONAL_LEFT_3      }, G_R310_FRAME_TIME    },
    {{ EYS_DIAGONAL_RIGHT_4  , EYS_DIAGONAL_LEFT_4      }, G_R310_FRAME_TIME    },
    {{ EYS_DIAGONAL_RIGHT_5  , EYS_DIAGONAL_LEFT_5      }, G_R310_FRAME_TIME * 5}, // 마지막 프레임 시간 길게
};

// smale
const T_R310_ani_Frame_t g_R310_frameSeq_Smile[] PROGMEM = {
    {{ EYE_NEUTRAL          , EYE_NEUTRAL               }, G_R310_FRAME_TIME    }, // 프레임 0: 기본 눈 모양
    {{ EYS_DIAGONAL_LEFT_1  , EYS_DIAGONAL_RIGHT_1      }, G_R310_FRAME_TIME    }, // 프레임 1: 눈동자 아래 이동 시작
    {{ EYS_DIAGONAL_LEFT_2  , EYS_DIAGONAL_RIGHT_2      }, G_R310_FRAME_TIME    }, // 프레임 2: 눈동자 더 아래로
    {{ EYS_DIAGONAL_LEFT_3  , EYS_DIAGONAL_RIGHT_3      }, G_R310_FRAME_TIME    },
    {{ EYS_DIAGONAL_LEFT_4  , EYS_DIAGONAL_RIGHT_4      }, G_R310_FRAME_TIME    },
    {{ EYS_DIAGONAL_LEFT_5  , EYS_DIAGONAL_RIGHT_5      }, G_R310_FRAME_TIME * 5}, // 마지막 프레임 시간 길게
};

// 잠자는 눈 애니메이션 시퀀스 데이터 (좌우 눈 동일 모양)
const T_R310_ani_Frame_t g_R310_frameSeq_Sleep[] PROGMEM = {
    {{ EYE_NEUTRAL, EYE_NEUTRAL }, G_R310_FRAME_TIME},     // 프레임 0: 기본 눈 모양
    {{ EYE_CLOSE_1, EYE_CLOSE_1 }, G_R310_FRAME_TIME},   // 프레임 1: 감기기 시작
    {{ EYE_CLOSE_2, EYE_CLOSE_2 }, G_R310_FRAME_TIME},   // 프레임 2: 더 감김
    {{ EYE_CLOSE_3, EYE_CLOSE_3 }, G_R310_FRAME_TIME},   // 프레임 3: 더 감김
    {{ EYE_CLOSE_4, EYE_CLOSE_4 }, G_R310_FRAME_TIME},   // 프레임 4: 더 감김
    {{ EYE_CLOSE_5, EYE_CLOSE_5 }, G_R310_FRAME_TIME},   // 프레임 5: 더 감김
    {{ EYE_ALL_OFF, EYE_ALL_OFF }, G_R310_FRAME_TIME * 2},   // 프레임 6: 완전히 감긴 모양 또는 패턴 등
};

const T_R310_ani_Frame_t g_R310_frameSeq_SleepBlink[] PROGMEM = {
    {{ EYE_CLOSE_4         	, EYE_CLOSE_4      }, G_R310_FRAME_TIME},   // 프레임 0: 최대로 찡그린 모양
    {{ EYE_CLOSE_5         	, EYE_CLOSE_5      }, G_R310_FRAME_TIME},   // 프레임 0: 최대로 찡그린 모양
    {{ EYE_ALL_OFF          , EYE_ALL_OFF      }, G_R310_FRAME_TIME},   // 프레임 1: 완전히 감긴 모양
};


// 감정 애니메이션 시퀀스 조회 테이블 항목
typedef struct {
    T_R310_emotion_idx_t        emotionIdx;        // 감정 종류
    const T_R310_ani_Frame_t* seq;                // 시퀀스 데이터 PROGMEM 주소
    uint8_t                     seqSize;               // 시퀀스 총 프레임 개수
} T_R310_ani_Table_t;


// 감정 애니메이션 조회 테이블
const T_R310_ani_Table_t g_R310_ani_Tables_arr[] PROGMEM = {
    {EMT_NEUTRAL      , g_R310_frameSeq_Blink        , 1                                  }, // 중립: Blink 시퀀스의 첫 프레임만 사용 (정적)

	{EMT_BLINK        , g_R310_frameSeq_Blink        , G_R310_ARRAY_SIZE(g_R310_frameSeq_Blink) }, // 깜빡임
    {EMT_WINK         , g_R310_frameSeq_Wink         , G_R310_ARRAY_SIZE(g_R310_frameSeq_Wink)  }, // 윙크

	{EMT_LOOK_L       , g_R310_frameSeq_Left         , G_R310_ARRAY_SIZE(g_R310_frameSeq_Left)  }, // 왼쪽 보기
    {EMT_LOOK_R       , g_R310_frameSeq_Right        , G_R310_ARRAY_SIZE(g_R310_frameSeq_Right) }, // 오른쪽 보기

	{EMT_LOOK_U       , g_R310_frameSeq_Up           , G_R310_ARRAY_SIZE(g_R310_frameSeq_Up)    }, // 위 보기
    {EMT_LOOK_D       , g_R310_frameSeq_Down         , G_R310_ARRAY_SIZE(g_R310_frameSeq_Down)  }, // 아래 보기

	{EMT_SCAN_LR      , g_R310_frameSeq_ScanLeftRight, G_R310_ARRAY_SIZE(g_R310_frameSeq_ScanLeftRight)}, // 좌우 스캔
    {EMT_SCAN_UD      , g_R310_frameSeq_ScanUpDown   , G_R310_ARRAY_SIZE(g_R310_frameSeq_ScanUpDown)}, // 상하 스캔

    {EMT_ANGRY2       , g_R310_frameSeq_Angry2       , G_R310_ARRAY_SIZE(g_R310_frameSeq_Angry2)}, // 좌우 스캔
    {EMT_SMILE        , g_R310_frameSeq_Smile        , G_R310_ARRAY_SIZE(g_R310_frameSeq_Smile)}, // 상하 스캔

    {EMT_SLEEP        , g_R310_frameSeq_Sleep        , G_R310_ARRAY_SIZE(g_R310_frameSeq_Sleep)}, // 잠자는 눈
    {EMT_SLEEP_BLINK  , g_R310_frameSeq_SleepBlink   , G_R310_ARRAY_SIZE(g_R310_frameSeq_SleepBlink)}, // 잠자는 눈

};


// --- 로봇 눈 모양 폰트 데이터 배열 (16x16 픽셀) ---
// PROGMEM 키워드는 데이터를 AVR 마이크로컨트롤러의 플래시 메모리에 저장하여
// SRAM 사용량을 절약하는 데 사용됩니다.
// 각 폰트는 16행 x 16열의 비트맵 데이터를 uint16_t[16] 배열에 저장합니다.
const T_R310_FontChar_16x16_t g_R310_RobotEyes_Font_16x16_arr[] PROGMEM = {
    // 인덱스 0: EYE_NEUTRAL (중립/행복한 눈) - 16x16으로 확장
    // 8x8 폰트: {0b00000000, 0b00111100, 0b01111110, 0b01100110, 0b01100110, 0b01111110, 0b00111100, 0b00000000}
    {16, { // width 16
        0b0000000000000000, // . . . . . . . . . . . . . . . .
        0b0001111000011110, // . . . # # # # . . . # # # # . . (양쪽 눈)
        0b0011111100111111, // . . # # # # # # . . # # # # # # (양쪽 눈)
        0b0111001101110011, // . # # # . . # # . # # # . . # # (눈동자 중앙)
        0b0111001101110011, // . # # # . . # # . # # # . . # # (눈동자 중앙)
        0b0111111101111111, // . # # # # # # # . # # # # # # #
        0b0011111000111110, // . . # # # # # . . . # # # # # .
        0b0000000000000000, // . . . . . . . . . . . . . . . .
        0b0000000000000000, // . . . . . . . . . . . . . . . . (하단 여백)
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 1: EYE_LOOK_DOWN_2 (아래쪽 먼 곳을 보는 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110,
        0b0011111100111111,
        0b0111111101111111,
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 2: EYE_LOOK_DOWN_1 (아래쪽 중앙을 보는 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0011111100111111,
        0b0111111101111111,
        0b0110011001100110,
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 3: EYE_LOOK_UP_1 (위쪽 중앙을 보는 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0110011001100110,
        0b0110011001100110,
        0b0111111101111111,
        0b0111111101111111,
        0b0011111000111110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 4: EYE_LOOK_UP_2 (위쪽 먼 곳을 보는 눈) - 16x16으로 확장
    {16, {
        0b0001111000011110,
        0b0110011001100110,
        0b0110011001100110,
        0b0111111101111111,
        0b0111111101111111,
        0b0011111000111110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 5: EYE_LOOK_LEFT_2 (왼쪽을 보는 눈, 작은 눈동자) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0011110000000000, // 왼쪽 눈동자
        0b0111111000000000,
        0b1110011100000000,
        0b1110011100000000,
        0b1111111000000000,
        0b0111110000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 6: EYE_LOOK_LEFT_1 (중앙 왼쪽을 보는 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110, // 양쪽 눈의 시작
        0b0011111100111111,
        0b0110011101100111, // 왼쪽 눈동자를 왼쪽으로
        0b0110011101100111,
        0b0111111101111111,
        0b0011111000111110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 7: EYE_LOOK_RIGHT_1 (중앙 오른쪽을 보는 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110, // 양쪽 눈의 시작
        0b0011111100111111,
        0b0111001101110011, // 오른쪽 눈동자를 오른쪽으로
        0b0111001101110011,
        0b0111111101111111,
        0b0011111000111110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 8: EYE_LOOK_RIGHT_2 (오른쪽 끝을 보는 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000111100, // 오른쪽 눈동자
        0b0000000001111110,
        0b0000000011100111,
        0b0000000011100111,
        0b0000000001111110,
        0b0000000000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 9: EYE_CLOSE_1 (눈꺼풀이 절반 감긴 눈) - 16x16으로 확장 (아래로 약간 내려간 느낌)
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110,
        0b0011111100111111,
        0b0111111101111111,
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 10: EYE_CLOSE_2 (눈꺼풀이 더 감긴 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110,
        0b0011111100111111,
        0b0111111101111111,
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 11: EYE_CLOSE_3 (눈꺼풀이 거의 감긴 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110,
        0b0011111100111111,
        0b0111111101111111,
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 12: EYE_CLOSE_4 (눈동자만 보이는 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110,
        0b0011111100111111,
        0b0111111101111111,
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 13: EYE_CLOSE_5 (매우 작은 눈동자만 보이는 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110,
        0b0011111100111111,
        0b0111111101111111,
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 14: EYE_ALL_OFF (모든 픽셀이 꺼진 눈) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 15: EYE_SAD_RIGHT_1 (슬픈 오른쪽 눈 1 - 눈꼬리 처짐 시작) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100, // 양쪽 눈 동시 적용 (단일 눈 모양처럼 보이게)
        0b0010011000100110,
        0b0100111101001111,
        0b0100111101001111,
        0b0111111001111110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 16: EYE_SAD_LEFT_1 (슬픈 왼쪽 눈 1 - 눈꼬리 처짐 시작) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100,
        0b0010011000100110,
        0b0100111101001111,
        0b0100111101001111,
        0b0111111001111110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 17: EYE_SAD_RIGHT_2 (슬픈 오른쪽 눈 2 - 눈꼬리 더 처짐) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100,
        0b0010011000100110,
        0b0100111101001111,
        0b0110011001100110,
        0b0111111001111110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 18: EYE_SAD_LEFT_2 (슬픈 왼쪽 눈 2 - 눈꼬리 더 처짐) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100,
        0b0010011000100110,
        0b0100111101001111,
        0b0110011001100110,
        0b0111111001111110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 19: EYE_SAD_RIGHT_3 (슬픈 오른쪽 눈 3 - 가장 슬픈 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000110000001100, // 눈썹
        0b0011110000111100, // 눈 모양 시작
        0b0111111001111110,
        0b0110011001100110, // 눈동자
        0b0110011001100110,
        0b0111111001111110, // 아래 눈꺼풀
        0b0011110000111100, // 눈 모양 끝
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 20: EYE_SAD_LEFT_3 (슬픈 왼쪽 눈 3 - 가장 슬픈 눈) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000110000001100, // 눈썹
        0b0011110000111100, // 눈 모양 시작
        0b0111111001111110,
        0b0110011001100110, // 눈동자
        0b0110011001100110,
        0b0111111001111110, // 아래 눈꺼풀
        0b0011110000111100, // 눈 모양 끝
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 21: EYS_DIAGONAL_RIGHT_1 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100, // 양쪽 눈
        0b0011111000111110,
        0b0111011001110110, // 눈동자 오른쪽 위
        0b0110111001101110,
        0b0011111000111110,
        0b0001110000011100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 22: EYS_DIAGONAL_RIGHT_2 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100,
        0b0011111000111110,
        0b0111011001110110,
        0b0110111001101110,
        0b0011111000111110,
        0b0001110000011100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 23: EYS_DIAGONAL_RIGHT_3 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000110000001100,
        0b0001111000011110,
        0b0011011000110110,
        0b0110110001101100,
        0b0111100001111000,
        0b0011000000110000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 24: EYS_DIAGONAL_RIGHT_4 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000010000000100,
        0b0000111000001110,
        0b0001011000010110,
        0b0010101000101010,
        0b0111001001110010,
        0b0110000001100000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 25: EYS_DIAGONAL_RIGHT_5 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000001000000010,
        0b0000010000000100,
        0b0000100000001000,
        0b0001000000010000,
        0b0010000000100000,
        0b0100000001000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 26: EYS_DIAGONAL_LEFT_1 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100, // 양쪽 눈
        0b0011111000111110,
        0b0110111001101110, // 눈동자 왼쪽 위
        0b0111011001110110,
        0b0011111000111110,
        0b0001110000011100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 27: EYS_DIAGONAL_LEFT_2 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100,
        0b0011111000111110,
        0b0110111001101110,
        0b0111011001110110,
        0b0011111000111110,
        0b0001110000011100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 28: EYS_DIAGONAL_LEFT_3 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000110000001100,
        0b0001111000011110,
        0b0011011000110110,
        0b0110110001101100,
        0b0111100001111000,
        0b0011000000110000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 29: EYS_DIAGONAL_LEFT_4 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000011000000110,
        0b0000111000001110,
        0b0001010000010100,
        0b0010100000101000,
        0b0111000001110000,
        0b0110000001100000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 30: EYS_DIAGONAL_LEFT_5 - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000001000000010,
        0b0000010000000100,
        0b0000100000001000,
        0b0001000000010000,
        0b0010000000100000,
        0b0100000001000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 31: EYE_X_SHAPE_1 (X자 눈 모양 1) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110, // 눈 외곽
        0b0010000100100001,
        0b0101101001011010, // X 모양
        0b0101101001011010,
        0b0010000100100001,
        0b0001111000011110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 32: EYE_X_SHAPE_2 (X자 눈 모양 2) - 16x16으로 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0010000100100001,
        0b0111001001110010, // 더 굵은 X 모양
        0b0111001001110010,
        0b0010000100100001,
        0b0001111000011110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 33: EYE_ANGRY_RIGHT_1 (화난 오른쪽 눈 1 - 눈썹 찡그림 시작) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100, // 눈썹 시작
        0b0011111000111110, // 눈썹
        0b0110011001100110, // 눈
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 34: EYE_ANGRY_LEFT_1 (화난 왼쪽 눈 1 - 눈썹 찡그림 시작) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001110000011100, // 눈썹 시작
        0b0011111000111110,
        0b0110011001100110,
        0b0110011001100110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 35: EYE_ANGRY_RIGHT_2 (화난 오른쪽 눈 2 - 눈썹 더 찡그림) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110, // 더 찡그린 눈썹
        0b0111111101111111,
        0b0111111101111111,
        0b0111111101111111,
        0b0011111000111110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 36: EYE_ANGRY_LEFT_2 (화난 왼쪽 눈 2 - 눈썹 더 찡그림) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110, // 더 찡그린 눈썹
        0b0111111101111111,
        0b0111111101111111,
        0b0111111101111111,
        0b0011111000111110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 37: EYE_ANGRY_RIGHT_3 (화난 오른쪽 눈 3 - 가장 화난 눈) - 16x16 확장
    {16, {
        0b1111111111111111, // 최상단 전체 켜짐 (눈썹처럼)
        0b1110011111100111,
        0b1100001111000011,
        0b1000000110000001,
        0b1000000110000001,
        0b1000000110000001,
        0b1100001111000011,
        0b1110011111100111,
        0b1111111111111111, // 최하단 전체 켜짐 (더 화난 느낌)
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 38: EYE_ANGRY_LEFT_3 (화난 왼쪽 눈 3 - 가장 화난 눈) - 16x16 확장
    {16, {
        0b1111111111111111,
        0b1110011111100111,
        0b1100001111000011,
        0b1000000110000001,
        0b1000000110000001,
        0b1000000110000001,
        0b1100001111000011,
        0b1110011111100111,
        0b1111111111111111,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 39: EYE_EVIL_RIGHT_1 (사악한 오른쪽 눈 1 - 눈썹 치켜올림 시작) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110, // 눈썹 시작
        0b0011111100111111,
        0b0111001101110011, // 눈동자
        0b0111001101110011,
        0b0111111101111111,
        0b0011111000111110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 40: EYE_EVIL_LEFT_1 (사악한 왼쪽 눈 1 - 눈썹 치켜올림 시작) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0001111000011110, // 눈썹 시작
        0b0011111100111111,
        0b0111001101110011,
        0b0111001101110011,
        0b0111111101111111,
        0b0011111000111110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 41: EYE_EVIL_RIGHT_2 (사악한 오른쪽 눈 2 - 가장 사악한 눈) - 16x16 확장
    {16, {
        0b1111111111111111, // 최상단 전체 켜짐 (눈썹처럼)
        0b1110011111100111,
        0b1100001111000011,
        0b1000000110000001,
        0b1000000110000001,
        0b1000000110000001,
        0b1100001111000011,
        0b1110011111100111,
        0b1111111111111111, // 최하단 전체 켜짐 (더 사악한 느낌)
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 42: EYE_EVIL_LEFT_2 (사악한 왼쪽 눈 2 - 가장 사악한 눈) - 16x16 확장
    {16, {
        0b1111111111111111,
        0b1110011111100111,
        0b1100001111000011,
        0b1000000110000001,
        0b1000000110000001,
        0b1000000110000001,
        0b1100001111000011,
        0b1110011111100111,
        0b1111111111111111,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 43: EYE_SCAN_LR_1 (좌우 스캔 눈동자 1 - 왼쪽 끝) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0010000100100001,
        0b0101101001011010, // 왼쪽 눈동자
        0b0101101001011010,
        0b0010000100100001,
        0b0001111000011110,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 44: EYE_SCAN_LR_2 (좌우 스캔 눈동자 2 - 중간) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0010000100100001,
        0b0100001001000010, // 중앙 눈동자
        0b0100001001000010,
        0b0111001001110010,
        0b0111001001110010,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 45: EYE_SCAN_LR_3 (좌우 스캔 눈동자 3 - 오른쪽 끝) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0010000100100001,
        0b0100001001000010,
        0b0100001001000010,
        0b0101101001011010, // 오른쪽 눈동자
        0b0101101001011010,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 46: EYE_SCAN_UD_1 (상하 스캔 눈동자 1 - 위쪽 중간) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0010000100100001,
        0b0100111001001110, // 위쪽 눈동자
        0b0100111001001110,
        0b0100001001000010,
        0b0100001001000010,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 47: EYE_SCAN_UD_2 (상하 스캔 눈동자 2 - 중간) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0010000100100001,
        0b0100001001000010,
        0b0100001001000010, // 중앙 눈동자
        0b0100001001000010,
        0b0100001001000010,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 48: EYE_SCAN_UD_3 (상하 스캔 눈동자 3 - 아래쪽 끝) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110,
        0b0010000100100001,
        0b0101101001011010, // 아래쪽 눈동자
        0b0101101001011010,
        0b0100001001000010,
        0b0100001001000010,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},

    // 인덱스 49: EYE_SQUINTED (찡그린 눈 - 최대로 찡그린) - 16x16 확장
    {16, {
        0b0000000000000000,
        0b0001111000011110, // 위쪽 눈꺼풀
        0b0010000100100001,
        0b0100001001000010,
        0b0100111001001110, // 아래쪽 눈꺼풀 (찡그림)
        0b0100111001001110,
        0b0011110000111100,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000,
        0b0000000000000000
    }},
};

// 폰트 데이터 배열의 길이 (T_R310_FontChar_16x16_t 개수)
const int G_R310_ROBOT_EYES_FONT_16x16_LEN = sizeof(g_R310_RobotEyes_Font_16x16_arr) / sizeof(T_R310_FontChar_16x16_t);

////////////////////////////////////////////////////////////////////
