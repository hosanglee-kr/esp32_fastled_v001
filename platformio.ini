; PlatformIO Project Configuration File
;
; Supported platforms for the MobiFlight firmware are:
; atmega2560
; promicro
; uno
;
; Version numbers for releases are automatically applied by GitHub
; during the release build process based on the tag associated with
; the GitHub release.

; To ensure builds work correctly in GitHub the default_envs
; should always be set to all supported MobiFlight platforms.
; If you want to only build a single platform locally during
; development use VSCode to change the target to a non-default
; by clicking on the target name in the bottom status bar.


[platformio]
	;default_envs = ESP32_IRremoteESP8266

	;include_dir 			= src
    ;src_dir                 = ./src/ESP32_IRremoteESP8266
	build_cache_dir 		= ./.pio/build_cache

[env]
platform = espressif32                 ; 모든 ESP32 보드에 공통 적용
framework = arduino                   ; Arduino 프레임워크 공통 적용
monitor_speed = 115200                ; 시리얼 모니터 속도 공통 적용
board_build.partitions = huge_app.csv ; 파티션 테이블 공통 적용

lib_deps =
	fastled/FastLED @ ^3.9.16         ; FastLED 라이브러리 공통 의존성
	adafruit/Adafruit MPU6050 @ ^2.2.6
build_flags =
	-std=gnu++2a                      ; C++ 표준 공통 적용

; ======================================================================
; 특정 보드 및 기능 플래그별 환경 설정
; ======================================================================

[env:esp32doit_F100]
board = esp32doit-devkit-v1           ; 특정 보드 모델 재정의
build_flags =
	-D F100                           ; 특정 기능 플래그 추가 (기본 build_flags에 추가됨)
;lib_extra_dirs =
;	lib/arduino-audio-tools           ; 필요한 경우 특정 환경에만 추가

[env:esp32doit_F110]
board = esp32doit-devkit-v1
build_flags =
	-D F110

[env:esp32doit_F120]
board = esp32doit-devkit-v1
build_flags =
	-D F120

[env:esp32doit_F130]
board = esp32doit-devkit-v1
build_flags =
	-D F130

[env:esp32doit_R100]
board = esp32doit-devkit-v1
build_flags =
	-D R100 

[env:esp32doit_R200]
board = esp32doit-devkit-v1
build_flags =
	-D R200  

[env:esp32-s3-devkitm-1_F100]
	board = esp32-s3-devkitm-1          ; 특정 보드 모델 재정의 (S3)
	board_build.arduino.memory_type = qio_qspi
	board_build.flash_mode = qio
	board_build.psram_type = qio
	board_upload.flash_size = 4MB
	board_upload.maximum_size = 4194304

	build_flags =
		-D BOARD_HAS_PSRAM
		-D ARDUINO_USB_CDC_ON_BOOT=1
		-D F100

[env:S3-ZERO-R200]
	board = esp32-s3-devkitc-1
;	board_build.partitions=default.csv
	board_build.arduino.memory_type = qio_qspi
	board_build.flash_mode = qio
	board_build.psram_type = qio
	board_upload.flash_size = 4MB
	board_upload.maximum_size = 4194304

	build_flags =
		-D R200
		-D BOARD_HAS_PSRAM
		-D ARDUINO_USB_CDC_ON_BOOT=1

[env:S3-ZERO-R210]
	board = esp32-s3-devkitc-1
	board_build.arduino.memory_type = qio_qspi
	board_build.flash_mode = qio
	board_build.psram_type = qio
	board_upload.flash_size = 4MB
	board_upload.maximum_size = 4194304

	build_flags =
		-D BOARD_HAS_PSRAM
		-D ARDUINO_USB_CDC_ON_BOOT=1
		-D R210  

[env:C3-ZERO-R210]
	board = lolin_c3_mini	; esp32-c3-m1i-kit	; esp32-c3-devkitm-1
	; board_build.arduino.memory_type = qio_qspi
	; board_build.flash_mode = qio
	; board_build.psram_type = qio
	; board_upload.flash_size = 4MB
	; board_upload.maximum_size = 4194304
	;upload_port = COM3 
	build_flags =
		 -D ARDUINO_USB_CDC_ON_BOOT=1
		; -D ARDUINO_USB_MODE=1
		-D R210  

[env:C3-ZERO_2-R210_super_mini]
board = esp32-c3-devkitm-1
framework = arduino
board_build.variant = nologo_esp32c3_super_mini
build_flags =
    -DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
		 ;-D ARDUINO_USB_CDC_ON_BOOT=1
		; -D ARDUINO_USB_MODE=1
		-D R210
  
[env:S3-ZERO-R220]
	board = esp32-s3-devkitc-1
	board_build.arduino.memory_type = qio_qspi
	board_build.flash_mode = qio
	board_build.psram_type = qio
	board_upload.flash_size = 4MB
	board_upload.maximum_size = 4194304

	build_flags =
		-D BOARD_HAS_PSRAM
		-D ARDUINO_USB_CDC_ON_BOOT=1
		-D R220  

[env:S3-ZERO-C100]
	board = esp32-s3-devkitc-1
	board_build.arduino.memory_type = qio_qspi
	board_build.flash_mode = qio
	board_build.psram_type = qio
	board_upload.flash_size = 4MB
	board_upload.maximum_size = 4194304

	build_flags =
		-D BOARD_HAS_PSRAM
		-D ARDUINO_USB_CDC_ON_BOOT=1
		-D C100  



		
;lib_extra_dirs =
;	lib/arduino-audio-tools         ; 필요한 경우 특정 환경에만 추가

; 필요에 따라 다른 특정 환경들을 추가합니다.
; [env:your_custom_env]
; extends = env                     ; 기본 설정을 상속받음 (생략 가능, 기본 동작)
; board = your_board_id             ; 다른 보드 설정
; build_flags =
;   -D YOUR_FLAG                    ; 추가 플래그
; lib_deps =
;   your/other-library              ; 추가 라이브러리


